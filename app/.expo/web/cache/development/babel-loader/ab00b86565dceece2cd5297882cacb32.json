{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Questionnaire.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\n\nvar CheckBox = function CheckBox(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(props.clicks),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clicks = _useState4[0],\n      setClicks = _useState4[1];\n\n  var changeBoxStatus = function changeBoxStatus() {\n    setSelected(!selected);\n    setClicks(clicks + 1);\n    props.onChange();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.checkBox],\n    onPress: changeBoxStatus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    size: 30,\n    color: '#211f30',\n    name: selected ? 'check-box' : 'check-box-outline-blank',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 32\n    }\n  }, \"Enable recommendation for breaks?\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, clicks)));\n};\n\nvar Questionnaire = function (_React$Component) {\n  _inherits(Questionnaire, _React$Component);\n\n  var _super = _createSuper(Questionnaire);\n\n  function Questionnaire() {\n    var _this2;\n\n    _classCallCheck(this, Questionnaire);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      hours: 0,\n      mins: 0,\n      breaks: 0,\n      breakTimes: 0,\n      workTimes: 0,\n      number: 0,\n      select: false\n    };\n\n    _this2.handleHours = function (text) {\n      _this2.setState({\n        hours: parseInt(text)\n      });\n    };\n\n    _this2.handleMins = function (text) {\n      _this2.setState({\n        mins: parseInt(text)\n      });\n    };\n\n    _this2.handleBreaks = function (text) {\n      _this2.setState({\n        breaks: parseInt(text)\n      });\n    };\n\n    _this2.handleBreakTimes = function (text) {\n      _this2.setState({\n        breakTimes: parseInt(text)\n      });\n    };\n\n    _this2.handleWorkTimes = function () {\n      var i = 60 * _this2.state.hours + _this2.state.mins;\n      var j = _this2.state.breaks * _this2.state.breakTimes;\n      var k = i - j;\n      k = k / (_this2.state.breaks + 1);\n\n      _this2.setState({\n        workTimes: k\n      });\n    };\n\n    _this2.changeState = function () {\n      _this2.setState({\n        number: _this2.state.number + 1\n      });\n\n      _this2.setState({\n        select: !_this2.state.select\n      });\n    };\n\n    _this2.renderChildren = function () {\n      return React.createElement(React.Fragment, null, React.createElement(TextInput, {\n        style: styles.input,\n        keyboardType: \"numeric\",\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Number of Sections\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        onChangeText: _this2.handleBreaks,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        keyboardType: \"numeric\",\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Length of Sections\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        onChangeText: _this2.handleBreakTimes,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }\n      }));\n    };\n\n    _this2.renderDropDown = function () {\n      return React.createElement(React.Fragment, null, React.createElement(DropDownPicker, {\n        items: [{\n          label: '45 mins',\n          value: 45\n        }, {\n          label: '1 hour',\n          value: 60\n        }, {\n          label: '1 hour 15 mins',\n          value: 75\n        }, {\n          label: '1 hour 30 mins',\n          value: 90\n        }, {\n          label: '1 hour 45 mins',\n          value: 105\n        }, {\n          label: '2 hours',\n          value: 120\n        }, {\n          label: '2 hour 15 mins',\n          value: 135\n        }, {\n          label: '2 hour 30 mins',\n          value: 150\n        }],\n        containerStyle: {\n          height: 40\n        },\n        dropDownStyle: {\n          marginTop: 2\n        },\n        placeholder: \"Select number of sections\",\n        onChangeItem: function onChangeItem(item) {\n          _this2.setState({\n            hours: parseInt(Math.floor(item.value / 60)),\n            mins: parseInt(item.value % 60)\n          });\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }), React.createElement(DropDownPicker, {\n        items: [{\n          label: '45 mins',\n          value: 45\n        }, {\n          label: '1 hour',\n          value: 60\n        }, {\n          label: '1 hour 15 mins',\n          value: 75\n        }, {\n          label: '1 hour 30 mins',\n          value: 90\n        }, {\n          label: '1 hour 45 mins',\n          value: 105\n        }, {\n          label: '2 hours',\n          value: 120\n        }, {\n          label: '2 hour 15 mins',\n          value: 135\n        }, {\n          label: '2 hour 30 mins',\n          value: 150\n        }],\n        containerStyle: {\n          height: 40\n        },\n        dropDownStyle: {\n          marginTop: 2\n        },\n        placeholder: \"Select length of sections\",\n        onChangeItem: function onChangeItem(item) {\n          _this2.setState({\n            hours: parseInt(Math.floor(item.value / 60)),\n            mins: parseInt(item.value % 60)\n          });\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 8\n        }\n      }));\n    };\n\n    return _this2;\n  }\n\n  _createClass(Questionnaire, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var navigate = this.props.navigation.navigate;\n      var list = [];\n\n      for (var i = 0; i < this.state.breaks * 2 + 1; i++) {\n        if (i % 2 == 0) {\n          list.push(this.state.workTimes);\n        } else {\n          list.push(this.state.breakTimes);\n        }\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }, React.createElement(DropDownPicker, {\n        items: [{\n          label: '45 mins',\n          value: 45\n        }, {\n          label: '1 hour',\n          value: 60\n        }, {\n          label: '1 hour 15 mins',\n          value: 75\n        }, {\n          label: '1 hour 30 mins',\n          value: 90\n        }, {\n          label: '1 hour 45 mins',\n          value: 105\n        }, {\n          label: '2 hours',\n          value: 120\n        }, {\n          label: '2 hour 15 mins',\n          value: 135\n        }, {\n          label: '2 hour 30 mins',\n          value: 150\n        }],\n        containerStyle: {\n          height: 40\n        },\n        dropDownStyle: {\n          marginTop: 2\n        },\n        placeholder: \"Select number of minutes\",\n        onChangeItem: function onChangeItem(item) {\n          _this3.setState({\n            hours: parseInt(Math.floor(item.value / 60)),\n            mins: parseInt(item.value % 60)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }), React.createElement(CheckBox, {\n        clicks: this.state.number,\n        select: this.state.select,\n        onChange: this.changeState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 6\n        }\n      }), \"// \", this.state.number, this.state.select ? this.renderDropDown() : this.renderChildren(), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return _this3.handleWorkTimes();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 12\n        }\n      }, React.createElement(Text, {\n        style: styles.submitButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }, \" Submit \"))), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }, this.state.workTimes), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, list), React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 12\n        }\n      }, React.createElement(Button, {\n        title: \"Go to Timer Screen\",\n        onPress: function onPress() {\n          return navigate('Timer');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 16\n        }\n      })));\n    }\n  }]);\n\n  return Questionnaire;\n}(React.Component);\n\nQuestionnaire.navigationOptions = {\n  title: 'Questionnaire'\n};\nexport { Questionnaire as default };\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 23\n  },\n  input: {\n    margin: 15,\n    height: 40,\n    borderColor: '#7a42f4',\n    borderWidth: 1\n  },\n  submitButton: {\n    backgroundColor: '#7a42f4',\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Questionnaire.js"],"names":["React","useState","DropDownPicker","Icon","CheckBox","props","selected","setSelected","clicks","setClicks","changeBoxStatus","onChange","styles","checkBox","Questionnaire","state","hours","mins","breaks","breakTimes","workTimes","number","select","handleHours","text","setState","parseInt","handleMins","handleBreaks","handleBreakTimes","handleWorkTimes","i","j","k","changeState","renderChildren","input","renderDropDown","label","value","height","marginTop","item","Math","floor","navigate","navigation","list","push","container","submitButton","submitButtonText","Component","navigationOptions","title","StyleSheet","create","paddingTop","margin","borderColor","borderWidth","backgroundColor","padding","color"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport { StyleSheet, TouchableOpacity, TextInput, Text, View, Button , } from 'react-native';\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport Icon from 'react-native-vector-icons/MaterialIcons'\n\n\nconst CheckBox =(props)=>{//from Anne's code\n      const [selected, setSelected] = useState(false);\n      const [clicks, setClicks]=useState(props.clicks);\n      const changeBoxStatus=()=> {setSelected(!selected);setClicks(clicks+1);props.onChange();}\n\n      return(\n         <>\n         <View>\n        <TouchableOpacity style={[styles.checkBox]} onPress={changeBoxStatus} >\n            <Icon\n                size={30}\n                color={'#211f30'}\n                name={ selected ? 'check-box' : 'check-box-outline-blank'}\n            />\n            </TouchableOpacity><Text>Enable recommendation for breaks?</Text>\n            <Text>{clicks}</Text>\n            </View>\n            </>\n      )\n\n}\n\nexport default class Questionnaire extends React.Component{\n   static navigationOptions = {title: 'Questionnaire'};\n   state = {\n    hours: 0,\n    mins: 0,\n    breaks: 0,\n    breakTimes:0,\n    workTimes:0,\n    number:0,\n    select:false\n }\n //submit button after hours and minutes\n //give recommendation and option to use/not use\n handleHours = (text) => {\n    this.setState({ hours: parseInt(text) })\n    //console.log(text)\n }\n handleMins = (text) => {\n    this.setState({ mins: parseInt(text) })\n }\n handleBreaks = (text) => {\n    this.setState({ breaks: parseInt(text) })\n }\n handleBreakTimes = (text) => {\n    this.setState({ breakTimes: parseInt(text) })\n }\n handleWorkTimes = () => {\n    //console.log(this.state.hours)\n    //console.log(this.state.mins)\n    //console.log(this.state.breaks)\n    //console.log(this.state.breakTimes)\n    let i = 60 * this.state.hours + this.state.mins;\n    let j = this.state.breaks * this.state.breakTimes;\n    let k = i-j;\n    //console.log(k)\n    k= k/(this.state.breaks+1);\n    this.setState({workTimes:k})\n    //console.log(k);\n    //console.log(this.state.workTimes)\n }\n changeState =()=>{\n    //e.preventDefault();\n    this.setState({number:this.state.number+1});\n    this.setState({select:!this.state.select});\n };\n renderChildren = () =>{\n    return(<>\n      <TextInput style = {styles.input}\n   keyboardType=\"numeric\"\n       underlineColorAndroid = \"transparent\"\n       placeholder = \"Number of Sections\"\n       placeholderTextColor = \"#9a73ef\"\n       autoCapitalize = \"none\"\n       onChangeText = {this.handleBreaks}/>\n    <TextInput style = {styles.input}\n   keyboardType=\"numeric\"\n       underlineColorAndroid = \"transparent\"\n       placeholder = \"Length of Sections\"\n       placeholderTextColor = \"#9a73ef\"\n       autoCapitalize = \"none\"\n       onChangeText = {this.handleBreakTimes}/>\n    </>);\n}\nrenderDropDown = () => {\n   return (<>\n      <DropDownPicker\n      items={[\n{label: '45 mins', value: 45,},\n{label: '1 hour', value: 60, },\n{label: '1 hour 15 mins', value: 75,},\n{label: '1 hour 30 mins', value: 90,},\n{label: '1 hour 45 mins', value: 105,},\n{label: '2 hours', value: 120,},\n{label: '2 hour 15 mins', value: 135,},\n{label: '2 hour 30 mins', value: 150,},\n]}\n\ncontainerStyle={{height: 40}}\ndropDownStyle={{marginTop: 2}}\n      placeholder=\"Select number of sections\"\n   //    items={this.state.mins}\n      onChangeItem={(item)=>{this.setState({\n        hours:parseInt(Math.floor(item.value/60)),\n        mins:parseInt(item.value%60)\n      })\n   }}/><DropDownPicker\n   items={[\n{label: '45 mins', value: 45,},\n{label: '1 hour', value: 60, },\n{label: '1 hour 15 mins', value: 75,},\n{label: '1 hour 30 mins', value: 90,},\n{label: '1 hour 45 mins', value: 105,},\n{label: '2 hours', value: 120,},\n{label: '2 hour 15 mins', value: 135,},\n{label: '2 hour 30 mins', value: 150,},\n]}\n\ncontainerStyle={{height: 40}}\ndropDownStyle={{marginTop: 2}}\n   placeholder=\"Select length of sections\"\n//    items={this.state.mins}\n   onChangeItem={(item)=>{this.setState({\n     hours:parseInt(Math.floor(item.value/60)),\n     mins:parseInt(item.value%60)\n   })\n}}/>\n   </>);\n}\n   render(){\n       const { navigate } = this.props.navigation; //props comes from App.js\n       let list = []; //array variable\n       for(let i=0;i<this.state.breaks*2+1;i++){\n          if(i%2==0){\n             list.push(this.state.workTimes)\n          }\n          else{\n             list.push(this.state.breakTimes)\n          }\n       }\n       return(\n        <>\n        <View style = {styles.container}>\n        <DropDownPicker\n        items={[\n{label: '45 mins', value: 45,},\n{label: '1 hour', value: 60, },\n{label: '1 hour 15 mins', value: 75,},\n{label: '1 hour 30 mins', value: 90,},\n{label: '1 hour 45 mins', value: 105,},\n{label: '2 hours', value: 120,},\n{label: '2 hour 15 mins', value: 135,},\n{label: '2 hour 30 mins', value: 150,},\n]}\n\ncontainerStyle={{height: 40}}\ndropDownStyle={{marginTop: 2}}\n        placeholder=\"Select number of minutes\"\n     //    items={this.state.mins}\n        onChangeItem={(item)=>{this.setState({\n          hours:parseInt(Math.floor(item.value/60)),\n          mins:parseInt(item.value%60)\n        })\n     }}\n     />\n     <CheckBox clicks={this.state.number} select={this.state.select} onChange={this.changeState}/>\n     // {this.state.number}\n     {this.state.select?this.renderDropDown():this.renderChildren()}\n           <TouchableOpacity\n              style = {styles.submitButton}\n              onPress = {\n                 () => this.handleWorkTimes()\n              }>\n              <Text style = {styles.submitButtonText}> Submit </Text>\n           </TouchableOpacity>\n        </View>\n        <Text>\n        {this.state.workTimes}\n        </Text>\n        <Text>\n        {list}\n        </Text>\n\n           <View style = {styles.container}>\n               <Button\n                  title= \"Go to Timer Screen\"\n                  onPress={() => navigate('Timer')}\n              />\n           </View>\n           </>\n\n       )\n   }\n}\nconst styles = StyleSheet.create({\n    container: {\n       paddingTop: 23\n    },\n    input: {\n       margin: 15,\n       height: 40,\n       borderColor: '#7a42f4',\n       borderWidth: 1\n    },\n    submitButton: {\n       backgroundColor: '#7a42f4',\n       padding: 10,\n       margin: 15,\n       height: 40,\n    },\n    submitButtonText:{\n       color: 'white'\n    }\n });\n"]},"metadata":{},"sourceType":"module"}