{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Timer.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport useInterval from '@use-it/interval';\nimport Notification from \"./Notification\";\nimport SlidingUpPanel from 'rn-sliding-up-panel';\nimport Checklist from \"./Checklist\";\nimport { Header } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nLogBox.ignoreAllLogs();\nvar customFonts = {\n  'NovaSquare': require(\"../assets/fonts/NovaSquare-Regular.ttf\")\n};\nvar animatedValue1 = new Animated.Value(0);\n\nvar Timer = function (_React$Component) {\n  _inherits(Timer, _React$Component);\n\n  var _super = _createSuper(Timer);\n\n  function Timer() {\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fontsLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var createTwoButtonAlert = function createTwoButtonAlert() {\n        return Alert.alert(\"Are you sure you would like to leave?\", \"Leaving will reset everything\", [{\n          text: \"Cancel\",\n          onPress: function onPress() {\n            return console.log(\"Cancel Pressed\");\n          },\n          style: \"cancel\"\n        }, {\n          text: \"OK\",\n          onPress: function onPress() {\n            return navigate('Questionnaire');\n          }\n        }], {\n          cancelable: false\n        });\n      };\n\n      var _this$props$navigatio = this.props.navigation,\n          navigate = _this$props$navigatio.navigate,\n          state = _this$props$navigatio.state;\n      var listoftimes = state.params.listoftimes.map(function (min) {\n        return min * 60;\n      });\n      var sum = listoftimes.reduce(function (accumulator, currentValue) {\n        return accumulator + currentValue;\n      }, 0);\n      var end = Date.now() + sum * 1000;\n\n      if (this.state.fontsLoaded) {\n        return React.createElement(React.Fragment, null, React.createElement(ImageBackground, {\n          source: require(\"../assets/background.png\"),\n          style: {\n            resizeMode: 'cover',\n            width: '100%',\n            height: '100%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }\n        }, React.createElement(Header, {\n          centerComponent: React.createElement(Image, {\n            source: require(\"../assets/logo.png\"),\n            style: {\n              height: '90%',\n              width: '40%'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 26\n            }\n          }),\n          leftComponent: React.createElement(TouchableOpacity, {\n            onPress: createTwoButtonAlert,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 9\n            }\n          }, React.createElement(Icon, {\n            size: 30,\n            color: 'white',\n            name: 'arrow-back-ios',\n            style: {\n              paddingLeft: 5,\n              paddingTop: 7\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }\n          })),\n          containerStyle: {\n            height: 95,\n            backgroundColor: 'transparent',\n            borderBottomColor: 'transparent'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }\n        }), React.createElement(NewTimer, {\n          listoftimes: listoftimes,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.startButton,\n          onPress: function onPress() {\n            return _this2._firstPanel.show();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: styles.startButtonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }\n        }, \"View Check List\")), React.createElement(SlidingUpPanel, {\n          draggableRange: {\n            top: 600,\n            bottom: 0\n          },\n          ref: function ref(c) {\n            return _this2._firstPanel = c;\n          },\n          animatedValue: animatedValue1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.slidingPanelContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        }, React.createElement(Checklist, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }\n        })))));\n      } else {\n        return React.createElement(AppLoading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 16\n          }\n        });\n      }\n    }\n  }]);\n\n  return Timer;\n}(React.Component);\n\nTimer.navigationOptions = {\n  title: 'Timer',\n  headerShown: false,\n  headerLeft: function headerLeft() {\n    return null;\n  }\n};\nexport { Timer as default };\n\nvar NewTimer = function NewTimer(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      buttonClicked = _useState2[0],\n      setButtonClicked = _useState2[1];\n\n  var _useState3 = useState(\"Start Timer to Begin\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timeAlert = _useState4[0],\n      setTimeAlert = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      i = _useState6[0],\n      setI = _useState6[1];\n\n  var _useState7 = useState(props.listoftimes[i]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      seconds = _useState8[0],\n      setSeconds = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      notify = _useState10[0],\n      setNotify = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      gameOn = _useState12[0],\n      setGame = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      visible = _useState14[0],\n      setVisible = _useState14[1];\n\n  var NotifyUser = function NotifyUser() {\n    if (notify == true) {\n      setNotify(false);\n      Notification();\n    }\n\n    return null;\n  };\n\n  useInterval(function () {\n    if (!buttonClicked) return;\n\n    if (seconds > 1) {\n      setSeconds(seconds - 1);\n      setTimeAlert(i % 2 ? \"Take a Break!\" : \"Study Session Has Started\");\n      return;\n    }\n\n    if (i === props.listoftimes.length - 1) {\n      setTimeAlert(\"Done!\");\n      setButtonClicked(false);\n      setSeconds(0);\n    } else {\n      setNotify(true);\n      setSeconds(props.listoftimes[i + 1]);\n      setI(i + 1);\n    }\n  }, 1000);\n  return React.createElement(React.Fragment, null, React.createElement(NotifyUser, {\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      justifyContent: \"center\"\n    },\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.timerText,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, timeLeftCalculator(seconds), \" \"), React.createElement(Text, {\n    style: styles.statusText,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, timeAlert, \" \"), React.createElement(TouchableOpacity, {\n    style: styles.startButton,\n    onPress: function onPress() {\n      setButtonClicked(!buttonClicked);\n    },\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.startButtonText,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, buttonClicked ? \"Pause\" : \"Start\"))));\n};\n\nvar ProgressBar = function ProgressBar(props) {\n  return React.createElement(Text, {\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, props.i, \" sections done! (baby progress bar)\");\n};\n\nfunction timeLeftCalculator(seconds) {\n  var days = Math.floor(seconds / (60 * 60 * 24));\n  var hours = Math.floor(seconds % (60 * 60 * 24) / (60 * 60));\n  var minutes = Math.floor(seconds % (60 * 60) / 60);\n  var secs = Math.floor(seconds % 60);\n  var timertext = days + \"d \" + hours + \"h \" + minutes + \"m \" + secs + \"s \";\n  return timertext;\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  timerText: {\n    fontFamily: 'NovaSquare',\n    color: 'white',\n    fontSize: 40,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    paddingVertical: 45\n  },\n  statusText: {\n    fontFamily: 'NovaSquare',\n    color: 'white',\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    paddingVertical: 20,\n    paddingBottom: 60\n  },\n  startButtonText: {\n    fontFamily: 'NovaSquare',\n    color: 'white',\n    fontSize: 25,\n    justifyContent: 'center',\n    textAlign: 'center'\n  },\n  startButton: {\n    marginVertical: 10,\n    backgroundColor: '#38127a',\n    height: 60,\n    borderWidth: 1,\n    borderColor: 'white',\n    borderRadius: 15,\n    width: '60%',\n    alignSelf: 'center',\n    justifyContent: 'center'\n  },\n  slidingPanelContainer: {\n    flex: 1,\n    backgroundColor: '#FFF',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Timer.js"],"names":["StatusBar","React","useState","useEffect","LogBox","useInterval","Notification","SlidingUpPanel","Checklist","Header","Icon","AppLoading","Font","ignoreAllLogs","customFonts","require","animatedValue1","Animated","Value","Timer","state","fontsLoaded","loadAsync","setState","_loadFontsAsync","createTwoButtonAlert","Alert","alert","text","onPress","console","log","style","navigate","cancelable","props","navigation","listoftimes","params","map","min","sum","reduce","accumulator","currentValue","end","Date","now","resizeMode","width","height","paddingLeft","paddingTop","backgroundColor","borderBottomColor","styles","startButton","_firstPanel","show","startButtonText","top","bottom","c","slidingPanelContainer","Component","navigationOptions","title","headerShown","headerLeft","NewTimer","buttonClicked","setButtonClicked","timeAlert","setTimeAlert","i","setI","seconds","setSeconds","notify","setNotify","gameOn","setGame","visible","setVisible","NotifyUser","length","justifyContent","timerText","timeLeftCalculator","statusText","ProgressBar","days","Math","floor","hours","minutes","secs","timertext","StyleSheet","create","container","flex","alignItems","fontFamily","color","fontSize","fontWeight","textAlign","paddingVertical","paddingBottom","marginVertical","borderWidth","borderColor","borderRadius","alignSelf"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState, useEffect} from 'react';\nimport { ImageBackground,Image, LogBox, Button, TouchableOpacity, StyleSheet, Text, View, Alert, Animated } from 'react-native';\nimport useInterval from '@use-it/interval';\nimport Notification from './Notification';\nimport SlidingUpPanel from 'rn-sliding-up-panel';\nimport Checklist from './Checklist';\nimport {Header} from 'react-native-elements'\nimport Icon from 'react-native-vector-icons/MaterialIcons'\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\n\nLogBox.ignoreAllLogs();\n\nlet customFonts = {\n  'NovaSquare': require('../assets/fonts/NovaSquare-Regular.ttf'),\n};\nconst animatedValue1 = new Animated.Value(0);\n\nexport default class Timer extends React.Component{\n  static navigationOptions = {title: 'Timer',headerShown: false , headerLeft:()=> null};\n  state= {fontsLoaded: false}\n  async _loadFontsAsync() {\n    await Font.loadAsync(customFonts);\n    this.setState({ fontsLoaded: true });\n  }\n\n  componentDidMount() {\n    this._loadFontsAsync();\n  }\n    \n  render(){\n    const createTwoButtonAlert = () =>\n      Alert.alert(\n        \"Are you sure you would like to leave?\",\n        \"Leaving will reset everything\",\n        [\n          {\n            text: \"Cancel\",\n            onPress: () => console.log(\"Cancel Pressed\"),\n            style: \"cancel\"\n          },\n          { text: \"OK\", onPress: () => navigate('Questionnaire') }\n        ],\n        { cancelable: false }\n      );\n    const { navigate, state } =this.props.navigation;\n    let listoftimes=state.params.listoftimes.map(min=>min*60)//mins to seconds\n    let sum = listoftimes.reduce(\n      ( accumulator, currentValue ) => accumulator + currentValue\n    ,0)\n    let end= Date.now()+sum*1000 //this doesn't work\n\n    if (this.state.fontsLoaded) {return(\n        <>\n          <ImageBackground source={require(\"../assets/background.png\")} style={{ resizeMode: 'cover', width: '100%', height: '100%' }}>\n        <Header\n        centerComponent={<Image source={require(\"../assets/logo.png\")} style={{ height:'90%', width:'40%'}} />}\n        leftComponent={\n        <TouchableOpacity onPress={createTwoButtonAlert}>\n            <Icon\n            size={30}\n            color={'white'}\n            name={'arrow-back-ios'}\n            style={{paddingLeft:5, paddingTop:7}}\n          />\n        </TouchableOpacity>} containerStyle={{\n          height:95,\n          backgroundColor:'transparent',\n          borderBottomColor:'transparent'\n          }}\n        />\n          {/*<Text> Study session until {end.toLocaleString()} </Text>*/}\n          <NewTimer listoftimes={listoftimes}/>\n          <TouchableOpacity style = {styles.startButton} onPress={() => this._firstPanel.show()}>\n            <Text style = {styles.startButtonText}>View Check List</Text>\n          </TouchableOpacity>\n\n          <SlidingUpPanel\n            draggableRange={{ top: 600, bottom: 0 }} ref={(c) => this._firstPanel = c} animatedValue={animatedValue1}>\n            <View style={styles.slidingPanelContainer}>\n              <Checklist/>\n            </View>\n          </SlidingUpPanel>\n          </ImageBackground>\n        </>\n      )}else{\n        return <AppLoading />;\n      }\n      \n      \n    }\n}\n\nconst NewTimer =(props)=>{\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const [timeAlert, setTimeAlert]= useState(\"Start Timer to Begin\");\n  const [i, setI]=useState(0) //counter of listoftimes\n  const [seconds,setSeconds]=useState(props.listoftimes[i])\n  const [notify, setNotify]=useState(false)\n  const [gameOn, setGame] =useState(false)\n  const [visible, setVisible] = useState(false);\n\n  //This function triggers a notification:\n  const NotifyUser=()=>{\n    if(notify==true){\n      setNotify(false);\n      Notification();\n    }\n   return null;\n  }\n\n  useInterval(()=>{\n    if (!buttonClicked) return\n    if(seconds>1){ //regular timer operations\n      setSeconds(seconds-1)\n      setTimeAlert((i%2) ? \"Take a Break!\"  : \"Study Session Has Started\")\n      return\n    }\n    if (i=== props.listoftimes.length-1){ //if end of timer\n      setTimeAlert(\"Done!\")\n      setButtonClicked(false)\n      setSeconds(0)\n      //maybe clearInterval?\n    }\n    else{ //when switching to next timer HERERERER\n      setNotify(true)\n      setSeconds(props.listoftimes[i+1])\n      setI(i+1)\n    }\n\n  },1000)//makes it run every second\n\n  return(\n<>  \n\n      <NotifyUser/>\n      <View style={{justifyContent:\"center\"}}>\n        <Text style={styles.timerText}>{timeLeftCalculator(seconds)} </Text>\n        <Text style={styles.statusText}>{timeAlert} </Text>\n        <TouchableOpacity style = {styles.startButton} onPress={()=>{setButtonClicked(!buttonClicked);}}>\n          <Text style = {styles.startButtonText}>{buttonClicked ? \"Pause\" : \"Start\"}</Text>\n        </TouchableOpacity>\n      {/*<ProgressBar i={i}/>*/}\n    </View>\n\n\n </>\n  )\n\n}\n\nconst ProgressBar=(props)=>{\n  return(\n    <Text>{props.i} sections done! (baby progress bar)</Text>\n  )\n}\n\nfunction timeLeftCalculator(seconds){\n  let days = Math.floor(seconds / ( 60 * 60 * 24));\n  let hours = Math.floor((seconds % (60 * 60 * 24)) / ( 60 * 60));\n  let minutes = Math.floor((seconds % ( 60 * 60)) / 60);\n  let secs = Math.floor(seconds % 60 );\n  let timertext=days + \"d \" + hours + \"h \" + minutes + \"m \" + secs + \"s \"\n  return timertext;\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    timerText: {\n      fontFamily:'NovaSquare',\n      color:'white',\n      fontSize:40,\n      fontWeight: 'bold',\n      textAlign:'center',\n      paddingVertical:45\n    },\n    statusText: {\n      fontFamily:'NovaSquare',\n      color:'white',\n      fontSize:25,\n      fontWeight: 'bold',\n      textAlign:'center',\n      paddingVertical:20,\n      paddingBottom:60\n     \n    },\n    startButtonText:{\n      fontFamily:'NovaSquare',\n      color:'white',\n      fontSize:25,\n      justifyContent:'center',\n      textAlign:'center',\n\n \n    },\n    startButton: {\n      marginVertical:10,\n      backgroundColor: '#38127a',\n      height: 60,\n     borderWidth:1,\n     borderColor:'white',\n     borderRadius:15,\n     width:'60%',\n     alignSelf:'center',\n     justifyContent:'center',\n \n   },\n    slidingPanelContainer: {\n      flex: 1,\n      backgroundColor: '#FFF',\n      alignItems: 'center',\n    }\n  });\n"]},"metadata":{},"sourceType":"module"}