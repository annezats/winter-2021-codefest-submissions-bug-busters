{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Questionnaire.js\",\n    _this3 = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Timer from \"./Timer\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { Header } from 'react-native-elements';\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nvar customFonts = {\n  'NovaSquare': require(\"../assets/fonts/NovaSquare-Regular.ttf\")\n};\n\nvar Questionnaire = function (_React$Component) {\n  _inherits(Questionnaire, _React$Component);\n\n  var _super = _createSuper(Questionnaire);\n\n  function Questionnaire() {\n    var _this;\n\n    _classCallCheck(this, Questionnaire);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      hours: 0,\n      mins: 0,\n      breaks: 0,\n      breakTimes: 0,\n      number: 0,\n      select: true,\n      timeChosen: false,\n      processTime: false,\n      breakD1: false,\n      breakD2: false,\n      list: [],\n      fontsLoaded: false\n    };\n\n    _this.makeListAuto = function () {\n      var add30 = [25, 5];\n      var reg50 = [20, 5, 20, 5];\n      var reg60 = [20, 5, 25, 10];\n      var end45 = [20, 5, 20];\n      var mins = _this.state.mins;\n      var hours = _this.state.hours;\n      var list = [];\n\n      if (mins == -1) {\n        list = [0, .25, .25, .25, .25];\n      } else if (hours != 0) {\n        list = new Array(hours - 1).fill(reg60).flat();\n      }\n\n      switch (mins) {\n        case 0:\n          list = list.concat([25, 10, 25]);\n          break;\n\n        case 5:\n          list = list.concat([25, 10, 30]);\n          break;\n\n        case 10:\n          list = list.concat(reg50, [20]);\n          break;\n\n        case 15:\n          list = list.concat(reg50, [25]);\n          break;\n\n        case 20:\n          list = list.concat(reg60, [20]);\n          break;\n\n        case 25:\n          list = list.concat(reg60, [25]);\n          break;\n\n        case 30:\n          list = list.concat(reg60, [30]);\n          break;\n\n        case 35:\n          list = list.concat(reg50, end45);\n          break;\n\n        case 40:\n          list = list.concat(reg50, add30, [20]);\n          break;\n\n        case 45:\n          list = list.concat(reg60, end45);\n          break;\n\n        case 50:\n          list = list.concat(reg60, add30, [20]);\n          break;\n\n        case 55:\n          list = list.concat(reg60, add30, [25]);\n          break;\n      }\n\n      if (hours === 0) {\n        list.shift();\n        list.shift();\n        list.shift();\n        list.shift();\n      }\n\n      _this.setState({\n        list: list\n      });\n    };\n\n    _this.makeListManually = function () {\n      var mins = 60 * _this.state.hours + _this.state.mins;\n      var breakTime = _this.state.breaks * _this.state.breakTimes;\n      var workTime = mins - breakTime;\n      var oneWorkTime = workTime / (_this.state.breaks + 1);\n      var list = [];\n\n      for (var i = 0; i < _this.state.breaks * 2 + 1; i++) {\n        if (i % 2 == 0) {\n          list.push(oneWorkTime);\n        } else {\n          list.push(_this.state.breakTimes);\n        }\n      }\n\n      _this.setState({\n        list: list\n      });\n    };\n\n    _this.changeState = function () {\n      _this.setState({\n        select: !_this.state.select\n      });\n    };\n\n    _this.SendText = function () {\n      var text = \"\";\n\n      for (var i = 0; i < _this.state.list.length; i++) {\n        if (i % 2 == 0) {\n          text += _this.state.list[i] + \" minute study session\";\n        } else if (i % 2 != 0) {\n          text += _this.state.list[i] + \" minute break\";\n        }\n\n        if (i != _this.state.list.length - 1) {\n          text += \" + \";\n        }\n      }\n\n      return text;\n    };\n\n    _this.renderDropDown = function () {\n      return React.createElement(React.Fragment, null, React.createElement(Text, {\n        style: styles.questions,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 8\n        }\n      }, \"How many breaks would you like?\"), React.createElement(DropDownPicker, {\n        items: makeDropdownBreakNum(),\n        style: styles.dropContainer,\n        containerStyle: {\n          height: 50,\n          width: '70%',\n          paddingLeft: 10,\n          backgroundColor: 'transparent'\n        },\n        dropDownStyle: {\n          backgroundColor: '#38127a',\n          alignContent: 'center',\n          alignSelf: 'center'\n        },\n        labelStyle: {\n          fontSize: 20,\n          fontFamily: 'NovaSquare',\n          textAlign: 'center',\n          color: 'white',\n          backgroundColor: 'transparent'\n        },\n        placeholderStyle: {\n          color: 'white',\n          fontFamily: 'NovaSquare',\n          textAlign: 'center',\n          backgroundColor: 'transparent'\n        },\n        placeholder: \"\",\n        onChangeItem: function onChangeItem(item) {\n          _this.setState({\n            breaks: item.value,\n            breakD1: true\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 8\n        }\n      }), React.createElement(Text, {\n        style: styles.questions,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 7\n        }\n      }, \"How long should each break be?\"), React.createElement(DropDownPicker, {\n        items: makeDropdownBreaks(),\n        style: styles.dropContainer,\n        containerStyle: {\n          height: 50,\n          width: '70%',\n          paddingLeft: 10,\n          backgroundColor: 'transparent'\n        },\n        dropDownStyle: {\n          backgroundColor: '#38127a',\n          alignContent: 'center',\n          alignSelf: 'center'\n        },\n        labelStyle: {\n          fontSize: 20,\n          fontFamily: 'NovaSquare',\n          textAlign: 'center',\n          color: 'white',\n          backgroundColor: 'transparent'\n        },\n        placeholderStyle: {\n          color: 'white',\n          fontFamily: 'NovaSquare',\n          textAlign: 'center',\n          backgroundColor: 'transparent'\n        },\n        placeholder: \"\",\n        onChangeItem: function onChangeItem(item) {\n          _this.setState({\n            breakTimes: item.value,\n            breakD2: true\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 8\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(Questionnaire, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigate = this.props.navigation.navigate;\n\n      if (this.state.fontsLoaded) {\n        return React.createElement(React.Fragment, null, React.createElement(ImageBackground, {\n          source: require(\"../assets/background.png\"),\n          style: {\n            resizeMode: 'cover',\n            width: '100%',\n            height: '100%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 10\n          }\n        }, React.createElement(Header, {\n          centerComponent: React.createElement(Image, {\n            source: require(\"../assets/logo.png\"),\n            style: {\n              height: '90%',\n              width: '40%'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 28\n            }\n          }),\n          containerStyle: {\n            height: 95,\n            backgroundColor: 'transparent',\n            borderBottomColor: 'transparent'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 10\n          }\n        }), React.createElement(ScrollView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 10\n          }\n        }, React.createElement(Text, {\n          style: styles.questions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 10\n          }\n        }, \"How long would you like to study for?\"), React.createElement(DropDownPicker, {\n          items: makeDropdown(),\n          style: styles.dropContainer,\n          containerStyle: {\n            height: 50,\n            width: '70%',\n            backgroundColor: 'transparent',\n            paddingLeft: 10,\n            alignContent: 'center'\n          },\n          dropDownStyle: {\n            backgroundColor: '#38127a',\n            alignContent: 'center',\n            alignSelf: 'center'\n          },\n          placeholder: \"\",\n          labelStyle: {\n            fontSize: 20,\n            fontFamily: 'NovaSquare',\n            textAlign: 'center',\n            color: 'white',\n            backgroundColor: 'transparent'\n          },\n          placeholderStyle: {\n            color: 'white',\n            fontFamily: 'NovaSquare',\n            textAlign: 'center',\n            backgroundColor: 'transparent'\n          },\n          onChangeItem: function onChangeItem(item) {\n            _this2.setState({\n              hours: parseInt(Math.floor(item.value / 60)),\n              mins: parseInt(item.value % 60),\n              timeChosen: true,\n              processTime: false\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 10\n          }\n        }), React.createElement(CheckBox, {\n          clicks: this.state.number,\n          select: this.state.select,\n          changeState: this.changeState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 10\n          }\n        }), this.state.select ? null : this.renderDropDown(), React.createElement(View, {\n          style: {\n            paddingTop: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 11\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.submitButton,\n          onPress: function onPress() {\n            _this2.state.select ? _this2.makeListAuto() : _this2.makeListManually();\n\n            _this2.setState({\n              processTime: true\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 10\n          }\n        }, React.createElement(Text, {\n          style: styles.submitButtonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 14\n          }\n        }, \"View Schedule\"))), this.state.processTime && React.createElement(View, {\n          style: {\n            paddingTop: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 11\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.submitButton,\n          disabled: this.state.select ? !this.state.timeChosen || !this.state.processTime : !this.state.timeChosen || !this.state.processTime || !this.state.breakD1 || !this.state.breakD2,\n          onPress: function onPress() {\n            return navigate('Timer', {\n              listoftimes: _this2.state.list\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.submitButtonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }\n        }, \"Go To Timer\")), React.createElement(Text, {\n          style: styles.schedule,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }\n        }, \" \", React.createElement(this.SendText, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 44\n          }\n        }))))));\n      } else {\n        return React.createElement(AppLoading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 16\n          }\n        });\n      }\n    }\n  }]);\n\n  return Questionnaire;\n}(React.Component);\n\nQuestionnaire.navigationOptions = {\n  title: 'Questionnaire',\n  headerLeft: function headerLeft() {\n    return null;\n  },\n  headerShown: false\n};\nexport { Questionnaire as default };\n;\n\nvar CheckBox = function CheckBox(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var changeBoxStatus = function changeBoxStatus() {\n    setSelected(!selected);\n    props.changeState();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      paddingTop: 20,\n      paddingBottom: 20,\n      paddingLeft: 10\n    },\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 10\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      alignItems: \"left\",\n      justifyContent: \"left\",\n      textAlign: \"center\"\n    },\n    onPress: changeBoxStatus,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    size: 19,\n    color: 'white',\n    name: selected ? 'check-box' : 'check-box-outline-blank',\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.reccomendation,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, \" Enable Recommended Schedule\"))));\n};\n\nfunction makeDropdown() {\n  var dropdown = Array.from(Array(64).keys());\n  dropdown = dropdown.map(function (x) {\n    return x * 5 + 45;\n  });\n  dropdown = dropdown.map(function (x) {\n    return {\n      label: parseInt(Math.floor(x / 60)) + \" hours \" + parseInt(x % 60) + \" mins \",\n      value: x\n    };\n  });\n  dropdown.unshift({\n    label: 'Demo',\n    value: -1\n  });\n  return dropdown;\n}\n\n;\n\nfunction makeDropdownBreaks() {\n  var dropdown = Array.from(Array(6).keys());\n  dropdown = dropdown.map(function (x) {\n    return x * 5 + 5;\n  });\n  dropdown = dropdown.map(function (x) {\n    return {\n      label: parseInt(x) + \" mins\",\n      value: x\n    };\n  });\n  return dropdown;\n}\n\n;\n\nfunction makeDropdownBreakNum() {\n  var dropdown = Array.from(Array(15).keys());\n  dropdown = dropdown.map(function (x) {\n    return {\n      label: parseInt(x) + \" breaks\",\n      value: x\n    };\n  });\n  return dropdown;\n}\n\n;\nvar styles = StyleSheet.create({\n  title: {\n    fontFamily: 'NovaSquare',\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold',\n    paddingTop: 10,\n    paddingLeft: 10\n  },\n  questions: {\n    fontFamily: 'NovaSquare',\n    color: 'white',\n    fontSize: 20,\n    paddingTop: 20,\n    paddingLeft: 15\n  },\n  schedule: {\n    fontFamily: 'NovaSquare',\n    color: 'white',\n    fontSize: 20,\n    paddingTop: 40,\n    paddingLeft: 10\n  },\n  reccomendation: {\n    fontFamily: 'NovaSquare',\n    color: 'white',\n    fontSize: 15\n  },\n  container: {},\n  input: {\n    margin: 15,\n    height: 40,\n    borderColor: '#7a42f4',\n    borderWidth: 1\n  },\n  submitButton: {\n    backgroundColor: '#38127a',\n    height: 60,\n    borderWidth: 1,\n    borderColor: 'white',\n    borderRadius: 15,\n    width: '60%',\n    alignSelf: 'center',\n    justifyContent: 'center'\n  },\n  submitButtonText: {\n    fontFamily: 'NovaSquare',\n    color: 'white',\n    fontSize: 25,\n    justifyContent: 'center',\n    textAlign: 'center'\n  },\n  dropContainer: {\n    backgroundColor: 'transparent',\n    borderTopColor: 'transparent',\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    borderBottomWidth: 1,\n    borderBottomColor: \"white\",\n    borderBottomEndRadius: 1,\n    borderBottomStartRadius: 1\n  },\n  button: {\n    height: 100,\n    paddingTop: 30,\n    paddingBottom: 30,\n    width: 50,\n    justifyContent: \"space-evenly\"\n  }\n});","map":{"version":3,"sources":["/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Questionnaire.js"],"names":["React","useState","Timer","DropDownPicker","Icon","Header","AppLoading","Font","customFonts","require","Questionnaire","state","hours","mins","breaks","breakTimes","number","select","timeChosen","processTime","breakD1","breakD2","list","fontsLoaded","makeListAuto","add30","reg50","reg60","end45","Array","fill","flat","concat","shift","setState","makeListManually","breakTime","workTime","oneWorkTime","i","push","changeState","SendText","text","length","renderDropDown","styles","questions","makeDropdownBreakNum","dropContainer","height","width","paddingLeft","backgroundColor","alignContent","alignSelf","fontSize","fontFamily","textAlign","color","item","value","makeDropdownBreaks","loadAsync","_loadFontsAsync","navigate","props","navigation","resizeMode","borderBottomColor","makeDropdown","parseInt","Math","floor","paddingTop","submitButton","submitButtonText","listoftimes","schedule","Component","navigationOptions","title","headerLeft","headerShown","CheckBox","selected","setSelected","changeBoxStatus","paddingBottom","flexDirection","alignItems","justifyContent","reccomendation","dropdown","from","keys","map","x","label","unshift","StyleSheet","create","fontWeight","container","input","margin","borderColor","borderWidth","borderRadius","borderTopColor","borderLeftColor","borderRightColor","borderBottomWidth","borderBottomEndRadius","borderBottomStartRadius","button"],"mappings":"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","sourcesContent":["\nimport React,{useState} from 'react'\nimport { TouchableHighlight, Image, ImageBackground, StyleSheet, TouchableOpacity, TextInput, Text, View, Button, ScrollView,  } from 'react-native';\nimport Timer from './Timer'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport Icon from 'react-native-vector-icons/MaterialIcons'\nimport {Header} from 'react-native-elements'\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\n\nlet customFonts = {\n  'NovaSquare': require('../assets/fonts/NovaSquare-Regular.ttf'),\n};\nexport default class Questionnaire extends React.Component{\n  static navigationOptions = {title: 'Questionnaire', headerLeft:()=> null, headerShown: false,};\n  state = {\n   hours: 0,\n   mins: 0,\n   breaks: 0,\n   breakTimes:0,\n   //workTimes:0,\n   number:0,\n   select:true,\n   timeChosen:false,\n  processTime:false,\n  breakD1:false,\n  breakD2:false,\n   list:[],\n   fontsLoaded: false,\n}\nasync _loadFontsAsync() {\n  await Font.loadAsync(customFonts);\n  this.setState({ fontsLoaded: true });\n}\n\n\ncomponentDidMount() {\n  this._loadFontsAsync();\n}\n//submit button after hours and minutes\n//give recommendation and option to use/not use\n\nmakeListAuto=()=>{\n let add30=[25,5]\n let reg50=[20,5,20,5]\n let reg60=[20,5,25,10]\n let end45=[20,5,20]\n let mins=this.state.mins\n let hours = this.state.hours\n \n let list =[]\n if(mins==-1){\n   list=[0,.25,.25,.25,.25]\n }\n else if (hours!=0){\n   list = new Array(hours-1).fill(reg60).flat()\n }\n\n switch(mins){\n   case 0: list=list.concat([25,10,25]); break;\n   case 5: list=list.concat([25,10,30]); break;\n   case 10: list=list.concat(reg50,[20]) ; break;\n   case 15: list=list.concat(reg50,[25]) ; break;\n   case 20: list=list.concat(reg60,[20]) ; break;\n   case 25: list=list.concat(reg60,[25]) ; break;\n   case 30: list=list.concat(reg60,[30]) ; break;\n   case 35: list=list.concat(reg50,end45) ; break;\n   case 40: list=list.concat(reg50,add30,[20]) ; break;\n   case 45: list=list.concat(reg60,end45) ; break;\n   case 50: list=list.concat(reg60,add30,[20]) ; break;\n   case 55: list=list.concat(reg60,add30,[25]) ; break;\n }\n\n if (hours===0){\n   list.shift()//removes the added reg60\n   list.shift()\n   list.shift()\n   list.shift()\n }\n this.setState({list:list})\n};\n\nmakeListManually =()=>{\n let mins = 60 * this.state.hours + this.state.mins;\n let breakTime = this.state.breaks * this.state.breakTimes;\n let workTime = mins-breakTime;\n\n let oneWorkTime= workTime/(this.state.breaks+1);\n //this.setState({workTimes:oneWorkTime})\n\n let list =[]\n for(let i=0;i<this.state.breaks*2+1;i++){\n    if(i%2==0){\n       list.push(oneWorkTime)\n    }\n    else{\n       list.push(this.state.breakTimes)\n    }\n\n }\n this.setState({list:list})\n};\n\n\n changeState =()=>{\n     this.setState({select:!this.state.select});\n };\n\nSendText=()=>{\n  var text =\"\";\n  for(let i = 0; i<this.state.list.length;i++){\n    if(i%2==0){\n      text+= this.state.list[i] + \" minute study session\"\n    }\n    else if(i%2!=0){\n      text+= this.state.list[i] + \" minute break\"\n    }\n    if(i!=this.state.list.length-1){\n      text+=\" + \"\n    }\n\n  }\n  return text\n  \n}\n renderDropDown=()=>{\n     return(\n       <>\n       <Text style={styles.questions}>How many breaks would you like?</Text>\n       <DropDownPicker\n         items={makeDropdownBreakNum()}\n         style={styles.dropContainer}\n          containerStyle={{ height: 50, width:'70%', paddingLeft:10,backgroundColor:'transparent'}}\n          dropDownStyle={{ backgroundColor:'#38127a', alignContent:'center',alignSelf:'center'}}\n          labelStyle={{\n            fontSize: 20,\n            fontFamily:'NovaSquare',\n            textAlign: 'center',\n            color: 'white',\n            backgroundColor:'transparent'\n        }}\n           placeholderStyle={{\n            color:'white',\n            fontFamily:'NovaSquare',\n            textAlign: 'center',\n            backgroundColor:'transparent'\n        }}\n         placeholder=\"\"\n         onChangeItem={\n          (item)=>{this.setState ({\n            breaks: item.value,\n            breakD1:true\n        })}}/>\n      <Text style={styles.questions}>How long should each break be?</Text>\n       <DropDownPicker\n         items={makeDropdownBreaks()}\n         style={styles.dropContainer}\n          containerStyle={{height: 50, width:'70%', paddingLeft:10,backgroundColor:'transparent',}}\n          dropDownStyle={{backgroundColor:'#38127a', alignContent:'center',alignSelf:'center'}}\n          labelStyle={{\n            fontSize: 20,\n            fontFamily:'NovaSquare',\n            textAlign: 'center',\n            color: 'white',\n            backgroundColor:'transparent'\n        }}\n           placeholderStyle={{\n            color:'white',\n            fontFamily:'NovaSquare',\n            textAlign: 'center',\n            backgroundColor:'transparent'\n        }}\n         placeholder=\"\"\n         onChangeItem={\n          (item)=>{this.setState ({\n            breakTimes: item.value,\n            breakD2:true\n        \n        })}}/>\n       </>\n     );\n }\n\n  render(){\n      const { navigate } = this.props.navigation; //props comes from App.js\n\n\n      if (this.state.fontsLoaded) {return(\n       <>\n         <ImageBackground source={require(\"../assets/background.png\")} style={{ resizeMode: 'cover', width: '100%', height: '100%' }}>\n         <Header\n          centerComponent={<Image source={require(\"../assets/logo.png\")} style={{ height:'90%', width:'40%'}} />}           \n          containerStyle={{\n            height:95,\n            backgroundColor:'transparent',\n            borderBottomColor:'transparent'\n           }}\n         />\n         <ScrollView>\n         <Text style={styles.questions}>How long would you like to study for?</Text>\n         <DropDownPicker\n           items={makeDropdown()}\n           style={styles.dropContainer}\n           containerStyle={{height: 50, width:'70%', backgroundColor:'transparent', paddingLeft:10, alignContent:'center'}}\n           dropDownStyle={{ backgroundColor:'#38127a', alignContent:'center',alignSelf:'center'}}\n           placeholder=\"\"\n           labelStyle={{\n            fontSize: 20,\n            fontFamily:'NovaSquare',\n            textAlign: 'center',\n            color: 'white',\n            backgroundColor:'transparent',\n        }}\n           placeholderStyle={{\n            color:'white',\n            fontFamily:'NovaSquare',\n            textAlign: 'center',\n            backgroundColor:'transparent',\n            \n        }}\n           onChangeItem={\n            (item)=>{this.setState ({\n              hours: parseInt(Math.floor(item.value/60)),\n              mins: parseInt(item.value%60),\n              timeChosen: true,\n              processTime: false\n          })}}\n         />\n\n\n         <CheckBox clicks={this.state.number} select={this.state.select} changeState={this.changeState}/>\n         {this.state.select?null:this.renderDropDown()}\n          <View style={{paddingTop:20}}>\n         <TouchableOpacity\n           style = {styles.submitButton}\n           onPress = {() => {this.state.select?this.makeListAuto():this.makeListManually();\n            this.setState({processTime:true});}}\n           >\n             <Text style={styles.submitButtonText}>View Schedule</Text>\n         </TouchableOpacity>\n         </View>\n\n\n          {this.state.processTime && \n          <View style={{paddingTop:20}}>\n            <TouchableOpacity style = {styles.submitButton} disabled={this.state.select\n                ?(!this.state.timeChosen||!this.state.processTime)\n                :(!this.state.timeChosen||!this.state.processTime||!this.state.breakD1||!this.state.breakD2)}\n            onPress={() => navigate('Timer', {listoftimes: this.state.list})}>\n                <Text style={styles.submitButtonText}>Go To Timer</Text>\n            </TouchableOpacity>\n         \n            <Text style={styles.schedule}> <this.SendText/></Text>\n         </View>}\n\n        </ScrollView>\n         </ImageBackground>\n       </>\n      )}else {\n        return <AppLoading />;\n      }\n  }\n\n};\n\n\nconst CheckBox =(props)=>{\n      const [selected, setSelected] = useState(true);\n      const changeBoxStatus=()=> {setSelected(!selected);props.changeState();}\n\n      return(\n         <>\n         <View style={{paddingTop:20, paddingBottom:20, paddingLeft:10}}>\n        <TouchableOpacity style={{flexDirection:'row',alignItems: \"left\",\n              justifyContent: \"left\",\n              textAlign: \"center\"}} onPress={changeBoxStatus} >\n            <Icon\n\n                size={19}\n                color={'white'}\n                name={ selected ? 'check-box' : 'check-box-outline-blank'}\n            />\n            <Text style={styles.reccomendation}> Enable Recommended Schedule</Text>\n            </TouchableOpacity>\n            </View>\n            </>\n      )\n}\n\nfunction makeDropdown(){\n  let dropdown= Array.from(Array(64).keys())\n  dropdown=dropdown.map(x=>x*5+45)\n  dropdown=dropdown.map(x=>{ return {label:parseInt(Math.floor(x/60))+\" hours \" + parseInt(x%60) +\" mins \", value:x,}})\n  dropdown.unshift({label:'Demo', value:-1},)\n  return dropdown\n};\n\nfunction makeDropdownBreaks(){\n  let dropdown= Array.from(Array(6).keys())\n  dropdown=dropdown.map(x=>x*5+5)\n  dropdown=dropdown.map(x=>{return {label:parseInt(x) + \" mins\", value:x}})\n  return dropdown\n};\n\nfunction makeDropdownBreakNum(){\n  let dropdown= Array.from(Array(15).keys())\n  dropdown=dropdown.map(x=>{return {label:parseInt(x) + \" breaks\", value:x}})\n  return dropdown\n};\n\n\nconst styles = StyleSheet.create({\n  title: {\n    fontFamily:'NovaSquare',\n    color:'white',\n    fontSize:20,\n    fontWeight: 'bold',\n    paddingTop:10,\n    paddingLeft:10\n  },\n    questions: {\n      fontFamily:'NovaSquare',\n      color:'white',\n      fontSize:20,\n      paddingTop:20,\n      paddingLeft:15\n    },\n    schedule: {\n      fontFamily:'NovaSquare',\n      color:'white',\n      fontSize:20,\n      paddingTop:40,\n      paddingLeft:10\n    },\n    reccomendation: {\n      fontFamily:'NovaSquare',\n      color:'white',\n      fontSize:15,\n    },\n    container: {\n   \n    },\n    input: {\n       margin: 15,\n       height: 40,\n       borderColor: '#7a42f4',\n       borderWidth: 1\n    },\n    submitButton: {\n       backgroundColor: '#38127a',\n       height: 60,\n      borderWidth:1,\n      borderColor:'white',\n      borderRadius:15,\n      width:'60%',\n      alignSelf:'center',\n      justifyContent:'center',\n\n    },\n    submitButtonText:{\n      fontFamily:'NovaSquare',\n      color:'white',\n      fontSize:25,\n      justifyContent:'center',\n      textAlign:'center'\n    },\n    dropContainer:{\n      backgroundColor:'transparent', \n      borderTopColor:'transparent', \n      borderLeftColor:'transparent', \n      borderRightColor:'transparent', \n      borderBottomWidth:1, \n      borderBottomColor:\"white\",\n      borderBottomEndRadius:1,\n      borderBottomStartRadius:1\n\n    },    \n    button:{\n      height:100,\n      paddingTop:30,\n      paddingBottom:30,\n      width:50,\n      justifyContent: \"space-evenly\"\n\n    },\n });\n"]},"metadata":{},"sourceType":"module"}