{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/annezats/Desktop/CODE/winter-2021-codefest-submissions-bug-busters/app/components/Game.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { registerRootComponent } from 'expo';\nimport RNDraw from 'rn-draw';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Swiper from 'react-native-swiper';\nimport { Overlay } from 'react-native-elements';\n\nvar OverlayExample = function OverlayExample() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var toggleOverlay = function toggleOverlay() {\n    setVisible(!visible);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: toggleOverlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    name: \"question\",\n    style: styles.button,\n    size: 50,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })), React.createElement(Overlay, {\n    isVisible: visible,\n    onBackdropPress: toggleOverlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 300,\n      width: 300\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(Swiper, {\n    style: styles.wrapper,\n    showsButtons: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, \"Welcome to Connect All!\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, \"Start by connecting the highlighted dots by drawing a line between them.\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"The line can not touch any other line or dots (excluding the highlighted dots)\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"Each dot will be highlighted twice\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"To receive the next pair of highlighted dots, press next.\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"Good luck and have fun!\"))))));\n};\n\nvar Game = function (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  var _super = _createSuper(Game);\n\n  function Game() {\n    var _this2;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n\n    _this2.rewind = function () {\n      _this2._undo();\n    };\n\n    _this2.clear = function () {\n      _this2._clear();\n    };\n\n    return _this2;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props$navigatio = this.props.navigation,\n          navigate = _this$props$navigatio.navigate,\n          state = _this$props$navigatio.state;\n\n      var createTwoButtonAlert = function createTwoButtonAlert() {\n        return Alert.alert(\"Are you sure you would like to leave this screen?\", \"Leaving will prevent you from returning to the game.\", [{\n          text: \"Cancel\",\n          onPress: function onPress() {\n            return console.log(\"Cancel Pressed\");\n          },\n          style: \"cancel\"\n        }, {\n          text: \"OK\",\n          onPress: function onPress() {\n            return navigate('Questionnaire');\n          }\n        }], {\n          cancelable: false\n        });\n      };\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 12\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          backgroundColor: \"white\",\n          justifyContent: \"space-evenly\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 14\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.rewind,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: \"undo\",\n        style: styles.button,\n        size: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: this.clear,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: \"forward\",\n        style: styles.button,\n        size: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      })), React.createElement(OverlayExample, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: {\n          height: 520,\n          marginTop: 20,\n          borderBottomWidth: 2,\n          borderTopWidth: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, React.createElement(RNDraw, {\n        containerStyle: {\n          backgroundColor: '#FFF',\n          width: 400,\n          height: 400\n        },\n        strokes: [],\n        containerStyle: {\n          backgroundColor: 'white'\n        },\n        rewind: function rewind(undo) {\n          _this3._undo = undo;\n        },\n        clear: function clear(_clear) {\n          _this3._clear = _clear;\n        },\n        next: function next(_next) {\n          _this3._next = _next;\n        },\n        color: '#000000',\n        strokeWidth: 4,\n        onChangeStrokes: function onChangeStrokes(strokes) {\n          return console.log(strokes);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.skip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, React.createElement(Button, {\n        color: \"black\",\n        title: \"Skip Game\",\n        onPress: createTwoButtonAlert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }\n      })));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nGame.navigationOptions = {\n  headerShown: false,\n  title: 'Game'\n};\nexport { Game as default };\nregisterRootComponent(Game);\nvar styles = StyleSheet.create({\n  button: {\n    height: 80,\n    paddingTop: 30,\n    paddingBottom: 30,\n    width: 50,\n    justifyContent: \"space-evenly\"\n  },\n  skip: {\n    alignSelf: 'center',\n    marginTop: 5,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    color: 'black'\n  },\n  wrapper: {},\n  slide: {\n    flex: 1,\n    paddingRight: 18,\n    paddingLeft: 18,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  text: {\n    color: 'black',\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/Users/annezats/Desktop/CODE/winter-2021-codefest-submissions-bug-busters/app/components/Game.js"],"names":["React","Component","useState","useEffect","useRef","registerRootComponent","RNDraw","Icon","Swiper","Overlay","OverlayExample","visible","setVisible","toggleOverlay","styles","button","height","width","wrapper","slide","text","Game","rewind","_undo","clear","_clear","props","navigation","navigate","state","createTwoButtonAlert","Alert","alert","onPress","console","log","style","cancelable","flex","backgroundColor","flexDirection","justifyContent","marginTop","borderBottomWidth","borderTopWidth","undo","next","_next","strokes","skip","navigationOptions","headerShown","title","StyleSheet","create","paddingTop","paddingBottom","alignSelf","color","paddingRight","paddingLeft","alignItems","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect, useRef } from 'react';\nimport { TouchableOpacity, StyleSheet, Button, Text, View, Alert } from 'react-native';\nimport { registerRootComponent } from 'expo';\nimport RNDraw from 'rn-draw'\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport Swiper from 'react-native-swiper'\nimport { Overlay } from 'react-native-elements';\n\nconst OverlayExample = () => {\n  const [visible, setVisible] = useState(false);\n\n  const toggleOverlay = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <View>\n      <TouchableOpacity onPress={toggleOverlay}>\n        <Icon name=\"question\" style= {styles.button}  size={50}/>\n      </TouchableOpacity>\n\n      <Overlay isVisible={visible} onBackdropPress={toggleOverlay}>\n        <View style={{ height: 300 , width: 300}}>\n          <Swiper style={styles.wrapper} showsButtons={false}>\n            <View style={styles.slide}>\n              <Text style={styles.text}>Welcome to Connect All!</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>Start by connecting the highlighted dots by drawing a line between them.</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>The line can not touch any other line or dots (excluding the highlighted dots)</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>Each dot will be highlighted twice</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>To receive the next pair of highlighted dots, press next.</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>Good luck and have fun!</Text>\n            </View>\n          </Swiper>\n        </View>\n      </Overlay>\n\n    </View>\n  );\n};\nexport default class Game extends React.Component{\n    static navigationOptions = { headerShown: false ,title: 'Game'};\n\n    rewind=()=>{\n      this._undo()\n    }\n    clear=()=>{\n      this._clear()\n    }\n    //new\n    //next=()=>{\n      //this.next()\n      //console.log(\"next\");\n    //}\n\n    render(){\n        const { navigate, state } =this.props.navigation;\n\n        const createTwoButtonAlert = () =>\n          Alert.alert(\n            \"Are you sure you would like to leave this screen?\",\n            \"Leaving will prevent you from returning to the game.\",\n            [\n              {\n                text: \"Cancel\",\n                onPress: () => console.log(\"Cancel Pressed\"),\n                style: \"cancel\"\n              },\n              { text: \"OK\", onPress: () => navigate('Questionnaire') }\n            ],\n            { cancelable: false }\n          );\n\n        return(\n\n           <View style={{flex: 1, backgroundColor:\"white\"}}>\n\n             <View style={{ flexDirection: \"row\" , backgroundColor: \"white\", justifyContent: \"space-evenly\"}}>\n                <TouchableOpacity onPress={this.rewind}>\n                  <Icon name=\"undo\" style= {styles.button} size={50}/>\n                </TouchableOpacity>\n\n                <TouchableOpacity onPress={this.clear}>\n                  <Icon name=\"forward\" style= {styles.button}  size={50}/>\n                </TouchableOpacity>\n                <OverlayExample/>\n              </View>\n\n            <View style={{height: 520, marginTop:20, borderBottomWidth:2,  borderTopWidth: 2,  }}>\n              <RNDraw\n              containerStyle={{\n                backgroundColor: '#FFF',\n                width: 400,\n                height: 400,\n                }}\n\n                  strokes={[]}\n                  containerStyle={{backgroundColor: 'white'}}\n                  rewind={(undo) => {this._undo = undo}}\n                  clear={(clear) => {this._clear = clear}}\n                  next={(next) => {this._next = next}}\n                  color={'#000000'}\n                  strokeWidth={4}\n                  onChangeStrokes={(strokes) => console.log(strokes)}\n                />\n            </View>\n\n\n              <View style={styles.skip}>\n                  <Button color=\"black\" title='Skip Game' onPress={createTwoButtonAlert}/>\n              </View>\n\n            </View>\n\n\n        )\n    }\n}\nregisterRootComponent(Game);\nconst styles = StyleSheet.create({\n    button:{\n      height:80,\n      paddingTop:30,\n      paddingBottom:30,\n      width:50,\n      justifyContent: \"space-evenly\"\n\n    },\n    skip: {\n      alignSelf: 'center',\n      marginTop:5,\n      backgroundColor: 'white',\n      justifyContent: 'center',\n      color: 'black'\n    },\n  wrapper: {},\n  slide: {\n    flex: 1,\n    paddingRight: 18,\n    paddingLeft: 18,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  text: {\n    color: 'black',\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n  });\n"]},"metadata":{},"sourceType":"module"}