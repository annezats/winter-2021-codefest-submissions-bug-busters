{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Questionnaire.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Timer from \"./Timer\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\n\nvar CheckBox = function CheckBox(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var changeBoxStatus = function changeBoxStatus() {\n    setSelected(!selected);\n    props.changeState();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.checkBox],\n    onPress: changeBoxStatus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    size: 30,\n    color: '#211f30',\n    name: selected ? 'check-box' : 'check-box-outline-blank',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 32\n    }\n  }, \"Enable recommendation for breaks?\")));\n};\n\nvar Questionnaire = function (_React$Component) {\n  _inherits(Questionnaire, _React$Component);\n\n  var _super = _createSuper(Questionnaire);\n\n  function Questionnaire() {\n    var _this2;\n\n    _classCallCheck(this, Questionnaire);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      hours: 0,\n      mins: 0,\n      breaks: 0,\n      breakTimes: 0,\n      number: 0,\n      select: true,\n      list: []\n    };\n\n    _this2.makeListAuto = function () {\n      var add30 = [25, 5];\n      var reg50 = [20, 5, 20, 5];\n      var reg60 = [20, 5, 25, 10];\n      var end45 = [20, 5, 20];\n      var mins = _this2.state.mins;\n      var hours = _this2.state.hours;\n      var list = [];\n\n      if (hours != 0) {\n        list = new Array(hours - 1).fill(reg60).flat();\n      }\n\n      switch (mins) {\n        case 0:\n          list = list.concat([25, 10, 25]);\n          break;\n\n        case 5:\n          list = list.concat([25, 10, 30]);\n          break;\n\n        case 10:\n          list = list.concat(reg50, [20]);\n          break;\n\n        case 15:\n          list = list.concat(reg50, [25]);\n          break;\n\n        case 20:\n          list = list.concat(reg60, [20]);\n          break;\n\n        case 25:\n          list = list.concat(reg60, [25]);\n          break;\n\n        case 30:\n          list = list.concat(reg60, [30]);\n          break;\n\n        case 35:\n          list = list.concat(reg50, end45);\n          break;\n\n        case 40:\n          list = list.concat(reg50, add30, [20]);\n          break;\n\n        case 45:\n          list = list.concat(reg60, end45);\n          break;\n\n        case 50:\n          list = list.concat(reg60, add30, [20]);\n          break;\n\n        case 55:\n          list = list.concat(reg60, add30, [25]);\n          break;\n      }\n\n      if (hours === 0) {\n        list.shift();\n        list.shift();\n        list.shift();\n        list.shift();\n      }\n\n      _this2.setState({\n        list: list\n      });\n    };\n\n    _this2.makeListManually = function () {\n      var mins = 60 * _this2.state.hours + _this2.state.mins;\n      var breakTime = _this2.state.breaks * _this2.state.breakTimes;\n      var workTime = mins - breakTime;\n      var oneWorkTime = workTime / (_this2.state.breaks + 1);\n      var list = [];\n\n      for (var i = 0; i < _this2.state.breaks * 2 + 1; i++) {\n        if (i % 2 == 0) {\n          list.push(oneWorkTime);\n        } else {\n          list.push(_this2.state.breakTimes);\n        }\n      }\n\n      _this2.setState({\n        list: list\n      });\n    };\n\n    _this2.changeState = function () {\n      _this2.setState({\n        select: !_this2.state.select\n      });\n    };\n\n    _this2.renderDropDown = function () {\n      return React.createElement(React.Fragment, null, React.createElement(DropDownPicker, {\n        items: [{\n          label: '1',\n          value: 1\n        }, {\n          label: '2',\n          value: 2\n        }, {\n          label: '3',\n          value: 3\n        }, {\n          label: '4',\n          value: 4\n        }],\n        containerStyle: {\n          height: 40\n        },\n        dropDownStyle: {\n          marginTop: 2\n        },\n        placeholder: \"Select how many breaks you want\",\n        onChangeItem: function onChangeItem(item) {\n          _this2.setState({\n            breaks: item.value\n          });\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }), React.createElement(DropDownPicker, {\n        items: [{\n          label: '5 mins',\n          value: 5\n        }, {\n          label: '10 mins',\n          value: 10\n        }, {\n          label: '15 mins',\n          value: 15\n        }, {\n          label: '20 mins',\n          value: 20\n        }],\n        containerStyle: {\n          height: 40\n        },\n        dropDownStyle: {\n          marginTop: 2\n        },\n        placeholder: \"Select how long each break will be\",\n        onChangeItem: function onChangeItem(item) {\n          _this2.setState({\n            breakTimes: item.value\n          });\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    return _this2;\n  }\n\n  _createClass(Questionnaire, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var navigate = this.props.navigation.navigate;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, React.createElement(DropDownPicker, {\n        items: badEasyDropdown(),\n        containerStyle: {\n          height: 40\n        },\n        dropDownStyle: {\n          marginTop: 2\n        },\n        placeholder: \"Select how long you will be studying\",\n        onChangeItem: function onChangeItem(item) {\n          _this3.setState({\n            hours: parseInt(Math.floor(item.value / 60)),\n            mins: parseInt(item.value % 60)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }), React.createElement(CheckBox, {\n        clicks: this.state.number,\n        select: this.state.select,\n        changeState: this.changeState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }), this.state.select ? null : this.renderDropDown(), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return _this3.state.select ? _this3.makeListAuto() : _this3.makeListManually();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.submitButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, \" Submit \")), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }, \" \", this.state.list), React.createElement(Button, {\n        title: \"Go to Timer Screen\",\n        onPress: function onPress() {\n          return navigate('Timer', {\n            listoftimes: _this3.state.list\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Questionnaire;\n}(React.Component);\n\nQuestionnaire.navigationOptions = {\n  title: 'Questionnaire',\n  headerLeft: function headerLeft() {\n    return null;\n  }\n};\nexport { Questionnaire as default };\n;\n\nfunction badEasyDropdown() {\n  var dropdown = [{\n    label: '45 mins',\n    value: 45\n  }, {\n    label: '1 hour',\n    value: 60\n  }, {\n    label: '1 hour 15 mins',\n    value: 75\n  }, {\n    label: '1 hour 30 mins',\n    value: 90\n  }, {\n    label: '1 hour 45 mins',\n    value: 105\n  }, {\n    label: '2 hours',\n    value: 120\n  }, {\n    label: '2 hour 15 mins',\n    value: 135\n  }, {\n    label: '2 hour 30 mins',\n    value: 150\n  }];\n  return dropdown;\n}\n\n;\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 23\n  },\n  input: {\n    margin: 15,\n    height: 40,\n    borderColor: '#7a42f4',\n    borderWidth: 1\n  },\n  submitButton: {\n    backgroundColor: '#7a42f4',\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Questionnaire.js"],"names":["React","useState","Timer","DropDownPicker","Icon","CheckBox","props","selected","setSelected","changeBoxStatus","changeState","styles","checkBox","Questionnaire","state","hours","mins","breaks","breakTimes","number","select","list","makeListAuto","add30","reg50","reg60","end45","Array","fill","flat","concat","shift","setState","makeListManually","breakTime","workTime","oneWorkTime","i","push","renderDropDown","label","value","height","marginTop","item","navigate","navigation","container","badEasyDropdown","parseInt","Math","floor","submitButton","submitButtonText","listoftimes","Component","navigationOptions","title","headerLeft","dropdown","StyleSheet","create","paddingTop","input","margin","borderColor","borderWidth","backgroundColor","padding","color"],"mappings":"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","sourcesContent":["\nimport React,{useState} from 'react'\nimport { StyleSheet, TouchableOpacity, TextInput, Text, View,ScrollView, Button } from 'react-native';\nimport Timer from './Timer'\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport Icon from 'react-native-vector-icons/MaterialIcons'\n\n\nconst CheckBox =(props)=>{\n      const [selected, setSelected] = useState(true);\n      const changeBoxStatus=()=> {setSelected(!selected);props.changeState();}\n\n      return(\n         <>\n         <View>\n        <TouchableOpacity style={[styles.checkBox]} onPress={changeBoxStatus} >\n            <Icon\n                size={30}\n                color={'#211f30'}\n                name={ selected ? 'check-box' : 'check-box-outline-blank'}\n            />\n            </TouchableOpacity><Text>Enable recommendation for breaks?</Text>\n            </View>\n            </>\n      )\n}\n\n\nexport default class Questionnaire extends React.Component{\n   static navigationOptions = {title: 'Questionnaire', \n   headerLeft:()=> null};\n   state = {\n    hours: 0,\n    mins: 0,\n    breaks: 0,\n    breakTimes:0,\n    //workTimes:0,\n    number:0,\n    select:true,\n    list:[]\n }\n //submit button after hours and minutes\n //give recommendation and option to use/not use\n\nmakeListAuto=()=>{\n  let add30=[25,5]\n  let reg50=[20,5,20,5]\n  let reg60=[20,5,25,10]\n  let end45=[20,5,20]\n  let mins=this.state.mins\n  let hours = this.state.hours\n  let list =[]\n  if (hours!=0){\n    list = new Array(hours-1).fill(reg60).flat()\n  }\n\n  switch(mins){\n    case 0: list=list.concat([25,10,25]); break;\n    case 5: list=list.concat([25,10,30]); break;\n    case 10: list=list.concat(reg50,[20]) ; break;\n    case 15: list=list.concat(reg50,[25]) ; break;\n    case 20: list=list.concat(reg60,[20]) ; break;\n    case 25: list=list.concat(reg60,[25]) ; break;\n    case 30: list=list.concat(reg60,[30]) ; break;\n    case 35: list=list.concat(reg50,end45) ; break;\n    case 40: list=list.concat(reg50,add30,[20]) ; break;\n    case 45: list=list.concat(reg60,end45) ; break;\n    case 50: list=list.concat(reg60,add30,[20]) ; break;\n    case 55: list=list.concat(reg60,add30,[25]) ; break;\n  }\n  if (hours===0){\n    list.shift()//removes the added reg60\n    list.shift()\n    list.shift()\n    list.shift()\n  }\n  this.setState({list:list})\n};\n\nmakeListManually =()=>{\n  let mins = 60 * this.state.hours + this.state.mins;\n  let breakTime = this.state.breaks * this.state.breakTimes;\n  let workTime = mins-breakTime;\n\n  let oneWorkTime= workTime/(this.state.breaks+1);\n  //this.setState({workTimes:oneWorkTime})\n\n  let list =[]\n  for(let i=0;i<this.state.breaks*2+1;i++){\n     if(i%2==0){\n        list.push(oneWorkTime)\n     }\n     else{\n        list.push(this.state.breakTimes)\n     }\n\n  }\n  this.setState({list:list})\n};\n\n  changeState =()=>{\n      this.setState({select:!this.state.select});\n  };\n\n\n  renderDropDown=()=>{\n      return(\n        <>\n        <DropDownPicker\n          items={[\n        {label: '1', value: 1,},\n        {label: '2', value: 2, },\n        {label: '3', value: 3,},\n        {label: '4', value: 4, },\n        ]}\n          containerStyle={{height: 40}}\n          dropDownStyle={{marginTop: 2}}\n          placeholder=\"Select how many breaks you want\"\n          onChangeItem={\n            (item)=>{this.setState ({\n              breaks: item.value\n          })}}/>\n        <DropDownPicker\n          items={[\n        {label: '5 mins', value: 5,},\n        {label: '10 mins', value: 10,},\n        {label: '15 mins', value: 15,},\n        {label: '20 mins', value: 20,},\n        ]}\n          containerStyle={{height: 40}}\n          dropDownStyle={{marginTop: 2}}\n          placeholder=\"Select how long each break will be\"\n          onChangeItem={\n            (item)=>{this.setState ({\n              breakTimes: item.value\n\n          })}}/>\n        </>\n      );\n  }\n\n   render(){\n       const { navigate } = this.props.navigation; //props comes from App.js\n\n       return(\n        <View style = {styles.container}>\n          <DropDownPicker\n            items={badEasyDropdown()}\n            containerStyle={{height: 40}}\n            dropDownStyle={{marginTop: 2}}\n            placeholder=\"Select how long you will be studying\"\n            onChangeItem={\n              (item)=>{this.setState ({\n                hours: parseInt(Math.floor(item.value/60)),\n                mins: parseInt(item.value%60)\n            })}}\n          />\n          <CheckBox clicks={this.state.number} select={this.state.select} changeState={this.changeState}/>\n          {this.state.select?null:this.renderDropDown()}\n          <TouchableOpacity\n            style = {styles.submitButton}\n            onPress = {() => this.state.select?this.makeListAuto():this.makeListManually()}\n            >\n            <Text style = {styles.submitButtonText}> Submit </Text>\n          </TouchableOpacity>\n\n          <Text> {this.state.list}</Text>\n\n          <Button\n              title= \"Go to Timer Screen\"\n              onPress={() => navigate('Timer', {listoftimes: this.state.list})}\n          />\n        </View>\n       )\n   }\n};\n\n\n\nfunction badEasyDropdown(){\n  let dropdown=\n  [\n{label: '45 mins', value: 45,},\n{label: '1 hour', value: 60, },\n{label: '1 hour 15 mins', value: 75,},\n{label: '1 hour 30 mins', value: 90,},\n{label: '1 hour 45 mins', value: 105,},\n{label: '2 hours', value: 120,},\n{label: '2 hour 15 mins', value: 135,},\n{label: '2 hour 30 mins', value: 150,},\n];\nreturn dropdown\n};\n\n//function makeDropdown(){\n  //let dropdown= Array.from(Array(64).keys())\n  //dropdown=dropdown.map(x=>x*5+45)\n  //dropdown=dropdown.map(x=>{label:parseInt(Math.floor(x/60))+\"hours\" + parseInt(x%60) +\"mins\", value:x,})\n  //return dropdown\n//};\n\n//function makeDropdownBreaks(){\n  //let dropdown= Array.from(Array(6).keys())\n  //dropdown=dropdown.map(x=>x*5+5)\n  //dropdown=dropdown.map(x=>{label:parseInt(x)) + \"mins\", value:x})\n  //return dropdown\n//};\n\n//function makeDropdownBreakNum(){\n  //let dropdown= Array.from(Array(15).keys())\n  //dropdown=dropdown.map(x=>{label:parseInt(x)) + \"breaks\", value:x})\n  //return dropdown\n//};\n\n\nconst styles = StyleSheet.create({\n    container: {\n       paddingTop: 23\n    },\n    input: {\n       margin: 15,\n       height: 40,\n       borderColor: '#7a42f4',\n       borderWidth: 1\n    },\n    submitButton: {\n       backgroundColor: '#7a42f4',\n       padding: 10,\n       margin: 15,\n       height: 40,\n    },\n    submitButtonText:{\n       color: 'white'\n    }\n });\n"]},"metadata":{},"sourceType":"module"}