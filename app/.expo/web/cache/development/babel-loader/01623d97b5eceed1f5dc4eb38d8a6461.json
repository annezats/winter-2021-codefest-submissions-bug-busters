{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/inputs.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar Inputs = function (_Component) {\n  _inherits(Inputs, _Component);\n\n  var _super = _createSuper(Inputs);\n\n  function Inputs() {\n    var _this;\n\n    _classCallCheck(this, Inputs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      hours: 0,\n      mins: 0,\n      breaks: 0,\n      breakTimes: 0,\n      workTimes: 0\n    };\n\n    _this.handleHours = function (text) {\n      _this.setState({\n        hours: parseInt(text)\n      });\n    };\n\n    _this.handleMins = function (text) {\n      _this.setState({\n        mins: parseInt(text)\n      });\n    };\n\n    _this.handleBreaks = function (text) {\n      _this.setState({\n        breaks: parseInt(text)\n      });\n    };\n\n    _this.handleBreakTimes = function (text) {\n      _this.setState({\n        breakTimes: parseInt(text)\n      });\n    };\n\n    _this.handleWorkTimes = function () {\n      var i = 60 * _this.state.hours + _this.state.mins;\n      var j = _this.state.breaks * _this.state.breakTimes;\n      var k = i - j;\n      k = k / (_this.state.breaks + 1);\n\n      _this.setState({\n        workTimes: k\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Inputs, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = [];\n\n      for (var i = 0; i < this.state.breaks * 2 + 1; i++) {\n        if (i % 2 == 0) {\n          list.push(this.state.workTimes);\n        } else {\n          list.push(this.state.breakTimes);\n        }\n\n        this.props.changeModal(list);\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 10\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        keyboardType: \"numeric\",\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Enter number of hours\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        onChangeText: this.handleHours,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        keyboardType: \"numeric\",\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Enter number of minutes\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        onChangeText: this.handleMins,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        keyboardType: \"numeric\",\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Number of Sections\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        onChangeText: this.handleBreaks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        keyboardType: \"numeric\",\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Length of Sections\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        onChangeText: this.handleBreakTimes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return _this2.handleWorkTimes();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.submitButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 16\n        }\n      }, \" Submit \"))), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 10\n        }\n      }, this.state.workTimes), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 10\n        }\n      }, list));\n    }\n  }]);\n\n  return Inputs;\n}(Component);\n\nexport default Inputs;\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 23\n  },\n  input: {\n    margin: 15,\n    height: 40,\n    borderColor: '#7a42f4',\n    borderWidth: 1\n  },\n  submitButton: {\n    backgroundColor: '#7a42f4',\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/inputs.js"],"names":["React","Component","Fragment","Inputs","state","hours","mins","breaks","breakTimes","workTimes","handleHours","text","setState","parseInt","handleMins","handleBreaks","handleBreakTimes","handleWorkTimes","i","j","k","list","push","props","changeModal","styles","container","input","submitButton","submitButtonText","StyleSheet","create","paddingTop","margin","height","borderColor","borderWidth","backgroundColor","padding","color"],"mappings":"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","sourcesContent":["import React, { Component, Fragment} from 'react'\nimport { View, Text, TouchableOpacity, TextInput, StyleSheet } from 'react-native'\n\nclass Inputs extends Component {\n   state = {\n      hours: 0,\n      mins: 0,\n      breaks: 0,\n      breakTimes:0,\n      workTimes:0\n   }\n\n   handleHours = (text) => {\n      this.setState({ hours: parseInt(text) })\n      //console.log(text)\n   }\n   handleMins = (text) => {\n      this.setState({ mins: parseInt(text) })\n   }\n   handleBreaks = (text) => {\n      this.setState({ breaks: parseInt(text) })\n   }\n   handleBreakTimes = (text) => {\n      this.setState({ breakTimes: parseInt(text) })\n   }\n   handleWorkTimes = () => {\n      //console.log(this.state.hours)\n      //console.log(this.state.mins)\n      //console.log(this.state.breaks)\n      //console.log(this.state.breakTimes)\n      let i = 60 * this.state.hours + this.state.mins;\n      let j = this.state.breaks * this.state.breakTimes;\n      let k = i-j;\n      //console.log(k)\n      k= k/(this.state.breaks+1);\n      this.setState({workTimes:k})\n      //console.log(k);\n      //console.log(this.state.workTimes)\n   }\n   render() {\n      let list = [];\n      for(let i=0;i<this.state.breaks*2+1;i++){\n         if(i%2==0){\n            list.push(this.state.workTimes)\n         }\n         else{\n            list.push(this.state.breakTimes)\n         }\n         this.props.changeModal(list);\n      }\n      return (\n         <>\n         <View style = {styles.container}>\n            <TextInput style = {styles.input}\n\t       keyboardType=\"numeric\"\n               underlineColorAndroid = \"transparent\"\n               placeholder = \"Enter number of hours\"\n               placeholderTextColor = \"#9a73ef\"\n               autoCapitalize = \"none\"\n               onChangeText = {this.handleHours}/>\n            <TextInput style = {styles.input}\n\t       keyboardType=\"numeric\"\n               underlineColorAndroid = \"transparent\"\n               placeholder = \"Enter number of minutes\"\n               placeholderTextColor = \"#9a73ef\"\n               autoCapitalize = \"none\"\n               onChangeText = {this.handleMins}/>\n\n            <TextInput style = {styles.input}\n\t       keyboardType=\"numeric\"\n               underlineColorAndroid = \"transparent\"\n               placeholder = \"Number of Sections\"\n               placeholderTextColor = \"#9a73ef\"\n               autoCapitalize = \"none\"\n               onChangeText = {this.handleBreaks}/>\n            <TextInput style = {styles.input}\n\t       keyboardType=\"numeric\"\n               underlineColorAndroid = \"transparent\"\n               placeholder = \"Length of Sections\"\n               placeholderTextColor = \"#9a73ef\"\n               autoCapitalize = \"none\"\n               onChangeText = {this.handleBreakTimes}/>\n            <TouchableOpacity\n               style = {styles.submitButton}\n               onPress = {\n                  () => this.handleWorkTimes()\n               }>\n               <Text style = {styles.submitButtonText}> Submit </Text>\n            </TouchableOpacity>\n         </View>\n         <Text>\n         {this.state.workTimes}\n         </Text>\n         <Text>\n         {list}\n         </Text>\n         </>\n      )\n   }\n}\nexport default Inputs\n\nconst styles = StyleSheet.create({\n   container: {\n      paddingTop: 23\n   },\n   input: {\n      margin: 15,\n      height: 40,\n      borderColor: '#7a42f4',\n      borderWidth: 1\n   },\n   submitButton: {\n      backgroundColor: '#7a42f4',\n      padding: 10,\n      margin: 15,\n      height: 40,\n   },\n   submitButtonText:{\n      color: 'white'\n   }\n})\n"]},"metadata":{},"sourceType":"module"}