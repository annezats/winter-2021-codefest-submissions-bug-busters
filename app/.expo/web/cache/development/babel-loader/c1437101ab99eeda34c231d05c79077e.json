{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Game.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { registerRootComponent } from 'expo';\nimport RNDraw from 'rn-draw';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Swiper from 'react-native-swiper';\nimport { Overlay } from 'react-native-elements';\nimport { Header } from 'react-native-elements';\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nvar customFonts = {\n  'NovaSquare': require(\"../assets/fonts/NovaSquare-Regular.ttf\")\n};\n\nvar InstructionsOverlay = function InstructionsOverlay() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var toggleOverlay = function toggleOverlay() {\n    setVisible(!visible);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: toggleOverlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    name: \"question\",\n    style: styles.button,\n    color: 'white',\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })), React.createElement(Overlay, {\n    isVisible: visible,\n    onBackdropPress: toggleOverlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 300,\n      width: 300\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Swiper, {\n    style: styles.wrapper,\n    showsButtons: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/logo.png\"),\n    style: {\n      height: '30%',\n      width: '40%',\n      marginBottom: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"Welcome to StudyTricks' Connect All!\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"Start by connecting the highlighted dots by drawing a line between them.\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"The line can not touch any other line or dots (excluding the highlighted dots)\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"Each dot will be highlighted twice\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"To receive the next pair of highlighted dots, press next.\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"Good luck and have fun!\"))))));\n};\n\nvar IntroOverlay = function IntroOverlay() {\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var toggleOverlay = function toggleOverlay() {\n    setVisible(!visible);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(Overlay, {\n    isVisible: visible,\n    onBackdropPress: toggleOverlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 300,\n      width: 300\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(Swiper, {\n    style: styles.wrapper,\n    showsButtons: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Welcome to Study Tricks!\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Do you feel like you can never get yourself to sit down and start doing schoolwork? Our revolutionary method is for you then!\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"The way it works is that you first play a game, then start a timed study session. It's like having dessert before dinner, to get you to sit down at the table.\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"By setting a clear end to how long you will be studying, and breaking it up into small sections (the Pomodoro method), you won't even notice how much time has passed!\")), React.createElement(View, {\n    style: styles.slide,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Click anywhere to start!\"))))));\n};\n\nvar Game = function (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  var _super = _createSuper(Game);\n\n  function Game() {\n    var _this2;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      lines: [],\n      fontsLoaded: false\n    };\n\n    _this2.rewind = function () {\n      _this2._undo();\n    };\n\n    _this2.clear = function () {\n      _this2._clear();\n    };\n\n    return _this2;\n  }\n\n  _createClass(Game, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props$navigatio = this.props.navigation,\n          navigate = _this$props$navigatio.navigate,\n          state = _this$props$navigatio.state;\n\n      var createTwoButtonAlert = function createTwoButtonAlert() {\n        return Alert.alert(\"Are you sure you would like to leave this screen?\", \"Leaving will prevent you from returning to the game.\", [{\n          text: \"Cancel\",\n          onPress: function onPress() {\n            return console.log(\"Cancel Pressed\");\n          },\n          style: \"cancel\"\n        }, {\n          text: \"OK\",\n          onPress: function onPress() {\n            return navigate('Questionnaire');\n          }\n        }], {\n          cancelable: false\n        });\n      };\n\n      if (this.state.fontsLoaded) {\n        return React.createElement(React.Fragment, null, React.createElement(ImageBackground, {\n          source: require(\"../assets/background.png\"),\n          style: {\n            resizeMode: 'cover',\n            width: '100%',\n            height: '100%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }\n        }, React.createElement(Header, {\n          centerComponent: React.createElement(Image, {\n            source: require(\"../assets/logo.png\"),\n            style: {\n              height: '90%',\n              width: '40%'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }\n          }),\n          containerStyle: {\n            height: 95,\n            backgroundColor: 'transparent',\n            borderBottomColor: 'transparent'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }\n        }), React.createElement(RNDraw, {\n          containerStyle: {\n            backgroundColor: 'transparent',\n            borderTopColor: 'white',\n            borderBottomColor: 'white',\n            borderWidth: 1\n          },\n          strokes: [],\n          rewind: function rewind(undo) {\n            _this3._undo = undo;\n          },\n          clear: function clear(_clear) {\n            _this3._clear = _clear;\n          },\n          next: function next(_next) {\n            _this3._next = _next;\n          },\n          color: 'white',\n          strokeWidth: 4,\n          onChangeStrokes: function onChangeStrokes(strokes) {},\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }\n        }), React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            backgroundColor: \"transparent\",\n            justifyContent: \"space-evenly\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: this.rewind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }\n        }, React.createElement(Icon, {\n          name: \"undo\",\n          style: styles.button,\n          color: 'white',\n          size: 20,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 19\n          }\n        })), React.createElement(TouchableOpacity, {\n          onPress: this.clear,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }\n        }, React.createElement(Icon, {\n          name: \"eraser\",\n          style: styles.button,\n          color: 'white',\n          size: 20,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 19\n          }\n        })), React.createElement(InstructionsOverlay, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }\n        })), React.createElement(TouchableOpacity, {\n          style: styles.skipButton,\n          onPress: createTwoButtonAlert,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: styles.skipButtonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }\n        }, \"Skip Game\"))));\n      } else {\n        return React.createElement(AppLoading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 10\n          }\n        });\n      }\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nGame.navigationOptions = {\n  headerShown: false,\n  title: 'Game'\n};\nexport { Game as default };\nregisterRootComponent(Game);\nvar styles = StyleSheet.create({\n  button: {\n    height: 30,\n    paddingTop: 10,\n    paddingBottom: 30,\n    width: '100%',\n    justifyContent: \"space-evenly\"\n  },\n  skip: {\n    alignSelf: 'center',\n    marginTop: 15,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    color: 'black'\n  },\n  wrapper: {},\n  slide: {\n    flex: 1,\n    paddingRight: 18,\n    paddingLeft: 18,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#38127a'\n  },\n  text: {\n    fontFamily: 'NovaSquare',\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  skipButton: {\n    backgroundColor: '#38127a',\n    height: 30,\n    borderWidth: 1,\n    borderColor: 'white',\n    borderRadius: 15,\n    width: '30%',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    margin: 5\n  },\n  skipButtonText: {\n    fontFamily: 'NovaSquare',\n    color: 'white',\n    fontSize: 15,\n    justifyContent: 'center',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Game.js"],"names":["React","Component","useState","useEffect","useRef","registerRootComponent","RNDraw","Icon","Swiper","Overlay","Header","AppLoading","Font","customFonts","require","InstructionsOverlay","visible","setVisible","toggleOverlay","styles","button","height","width","wrapper","slide","marginBottom","text","IntroOverlay","Game","state","lines","fontsLoaded","rewind","_undo","clear","_clear","loadAsync","setState","_loadFontsAsync","props","navigation","navigate","createTwoButtonAlert","Alert","alert","onPress","console","log","style","cancelable","resizeMode","backgroundColor","borderBottomColor","borderTopColor","borderWidth","undo","next","_next","strokes","flexDirection","justifyContent","skipButton","skipButtonText","navigationOptions","headerShown","title","StyleSheet","create","paddingTop","paddingBottom","skip","alignSelf","marginTop","color","flex","paddingRight","paddingLeft","alignItems","fontFamily","fontSize","fontWeight","borderColor","borderRadius","margin","textAlign"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect, useRef } from 'react';\nimport { ImageBackground, Image, TouchableOpacity, StyleSheet, Button, Text, View, Alert } from 'react-native';\nimport { registerRootComponent } from 'expo';\nimport RNDraw from 'rn-draw'\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport Swiper from 'react-native-swiper'\nimport { Overlay } from 'react-native-elements';\nimport {Header} from 'react-native-elements'\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\n\nlet customFonts = {\n  'NovaSquare': require('../assets/fonts/NovaSquare-Regular.ttf'),\n};\n\nconst InstructionsOverlay = () => {\n  const [visible, setVisible] = useState(false);\n\n  const toggleOverlay = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <View>\n      <TouchableOpacity onPress={toggleOverlay}>\n        <Icon name=\"question\" style= {styles.button}   color = {'white'} size={20}/>\n      </TouchableOpacity>\n\n      <Overlay isVisible={visible} onBackdropPress={toggleOverlay}>\n        <View style={{ height: 300 , width: 300}}>\n          <Swiper style={styles.wrapper} showsButtons={false}>\n            <View style={styles.slide}>\n            <Image source={require(\"../assets/logo.png\")} style={{ height:'30%', width:'40%', marginBottom:30}} />\n              <Text style={styles.text}>Welcome to StudyTricks' Connect All!</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>Start by connecting the highlighted dots by drawing a line between them.</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>The line can not touch any other line or dots (excluding the highlighted dots)</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>Each dot will be highlighted twice</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>To receive the next pair of highlighted dots, press next.</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>Good luck and have fun!</Text>\n            </View>\n          </Swiper>\n        </View>\n      </Overlay>\n\n    </View>\n  );\n};\n\nconst IntroOverlay = () => {\n  const [visible, setVisible] = useState(true);\n\n  const toggleOverlay = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <View>\n      <Overlay isVisible={visible} onBackdropPress={toggleOverlay}>\n        <View style={{ height: 300 , width: 300}}>\n          <Swiper style={styles.wrapper} showsButtons={false}>\n            <View style={styles.slide}>\n              <Text style={styles.text}>Welcome to Study Tricks!</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>Do you feel like you can never get yourself to sit down and start doing schoolwork? Our revolutionary method is for you then!</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>The way it works is that you first play a game, then start a timed study session. It's like having dessert before dinner, to get you to sit down at the table.</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>By setting a clear end to how long you will be studying, and breaking it up into small sections (the Pomodoro method), you won't even notice how much time has passed!</Text>\n            </View>\n            <View style={styles.slide}>\n              <Text style={styles.text}>Click anywhere to start!</Text>\n            </View>\n          </Swiper>\n        </View>\n      </Overlay>\n    </View>\n  );\n};\n\nexport default class Game extends React.Component{\n    static navigationOptions = { headerShown: false ,title: 'Game'};\n    state={\n    lines:[],\n    fontsLoaded: false};\n\n    async _loadFontsAsync() {\n      await Font.loadAsync(customFonts);\n      this.setState({ fontsLoaded: true });\n    }\n    \n    componentDidMount() {\n      this._loadFontsAsync();\n    }\n\n    rewind=()=>{\n      this._undo()\n    }\n    clear=()=>{\n      this._clear()\n    }\n\n\n    render(){\n        const { navigate, state } =this.props.navigation;\n\n        const createTwoButtonAlert = () =>\n          Alert.alert(\n            \"Are you sure you would like to leave this screen?\",\n            \"Leaving will prevent you from returning to the game.\",\n            [\n              {\n                text: \"Cancel\",\n                onPress: () => console.log(\"Cancel Pressed\"),\n                style: \"cancel\"\n              },\n              { text: \"OK\", onPress: () => navigate('Questionnaire') }\n            ],\n            { cancelable: false }\n          );\n\n\n \n          if (this.state.fontsLoaded) {return(\n<>\n\n\n          <ImageBackground source={require(\"../assets/background.png\")} style={{ resizeMode: 'cover', width: '100%', height: '100%' }}>\n          <Header\n           centerComponent={<Image source={require(\"../assets/logo.png\")} style={{ height:'90%', width:'40%'}} />}           \n           containerStyle={{\n             height:95,\n             backgroundColor:'transparent',\n             borderBottomColor:'transparent'\n            }}\n          />\n            \n              <RNDraw\n              containerStyle={{\n                backgroundColor: 'transparent',\n                borderTopColor: 'white',\n                borderBottomColor: 'white',\n                borderWidth:1,\n                }}\n                  strokes={[]}\n                  rewind={(undo) => {this._undo = undo}}\n                  clear={(clear) => {this._clear = clear}}\n                  next={(next) => {this._next = next}}\n                  color={'white'}\n                  strokeWidth={4}\n                  onChangeStrokes={(strokes) => {//this is good for debugging at the front-end\n                     // this.state.lines.push(strokes[strokes.length-1].props.d);\n                     // console.log(this.state.lines);\n                     // if(this.checkLine()){\n                     //    console.log(\"LINES detected\");\n                     // }\n                  }\n               }\n                />\n\n            {/*<IntroOverlay/>*/}\n            \n            <View style={{ flexDirection: \"row\" , backgroundColor: \"transparent\", justifyContent: \"space-evenly\"}}>\n                <TouchableOpacity onPress={this.rewind}>\n                  <Icon name=\"undo\" style= {styles.button} color = {'white'} size={20}/>\n                </TouchableOpacity>\n\n                <TouchableOpacity onPress={this.clear}>\n                  <Icon name=\"eraser\" style= {styles.button}  color = {'white'} size={20}/>\n                </TouchableOpacity>\n                <InstructionsOverlay/>\n              </View>\n\n              <TouchableOpacity style = {styles.skipButton} onPress={createTwoButtonAlert}>\n                <Text style = {styles.skipButtonText}>Skip Game</Text>\n              </TouchableOpacity>\n    \n</ImageBackground>\n\n\n</>\n\n)}else {\n  return <AppLoading />;\n}\n    }\n}\nregisterRootComponent(Game);\nconst styles = StyleSheet.create({\n    button:{\n      height:30,\n      paddingTop:10,\n      paddingBottom:30,\n      width:'100%',\n      justifyContent: \"space-evenly\"\n\n    },\n    skip: {\n      alignSelf: 'center',\n      marginTop:15,\n      backgroundColor: 'white',\n      justifyContent: 'center',\n      color: 'black'\n    },\n  wrapper: {},\n  slide: {\n    flex: 1,\n    paddingRight: 18,\n    paddingLeft: 18,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#38127a',\n  },\n  text: {\n    fontFamily:'NovaSquare',\n    color:'white',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  skipButton: {\n    backgroundColor: '#38127a',\n    height: 30,\n   borderWidth:1,\n   borderColor:'white',\n   borderRadius:15,\n   width:'30%',\n   alignSelf:'center',\n   justifyContent:'center',\n   margin:5\n\n },\n skipButtonText:{\n   fontFamily:'NovaSquare',\n   color:'white',\n   fontSize:15,\n   justifyContent:'center',\n   textAlign:'center'\n },\n  });\n"]},"metadata":{},"sourceType":"module"}