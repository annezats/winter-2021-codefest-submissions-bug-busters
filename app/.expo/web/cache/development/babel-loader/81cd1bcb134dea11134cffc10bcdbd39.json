{"ast":null,"code":"var MoveFinger = function MoveFinger(entities, _ref) {\n  var touches = _ref.touches;\n  touches.filter(function (t) {\n    return t.type === \"press\";\n  }).forEach(function (t) {\n    var finger = entities[t.id];\n\n    if (finger && finger.position) {\n      finger.position = [finger.position[0] - 5, finger.position[1] - 5];\n    }\n  });\n  return entities;\n};\n\nexport { MoveFinger };","map":{"version":3,"sources":["/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/game/systems.js"],"names":["MoveFinger","entities","touches","filter","t","type","forEach","finger","id","position"],"mappings":"AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,QAA2B;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAO5CA,EAAAA,OAAO,CAACC,MAAR,CAAe,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,KAAW,OAAf;AAAA,GAAhB,EAAwCC,OAAxC,CAAgD,UAAAF,CAAC,EAAI;AACnD,QAAIG,MAAM,GAAGN,QAAQ,CAACG,CAAC,CAACI,EAAH,CAArB;;AACA,QAAID,MAAM,IAAIA,MAAM,CAACE,QAArB,EAA+B;AAC7BF,MAAAA,MAAM,CAACE,QAAP,GAAkB,CAChBF,MAAM,CAACE,QAAP,CAAgB,CAAhB,IAAoB,CADJ,EAEhBF,MAAM,CAACE,QAAP,CAAgB,CAAhB,IAAoB,CAFJ,CAAlB;AAID;AACF,GARD;AASA,SAAOR,QAAP;AACD,CAjBD;;AAmBA,SAASD,UAAT","sourcesContent":["const MoveFinger = (entities, { touches }) => {\n  //\n  // //-- I'm choosing to update the game state (entities) directly for the sake of brevity and simplicity.\n  // //-- There's nothing stopping you from treating the game state as immutable and returning a copy..\n  // //-- Example: return { ...entities, t.id: { UPDATED COMPONENTS }};\n  // //-- That said, it's probably worth considering performance implications in either case.\n  //\n  touches.filter(t => t.type === \"press\").forEach(t => {\n    let finger = entities[t.id];\n    if (finger && finger.position) {\n      finger.position = [\n        finger.position[0] -5,\n        finger.position[1] -5\n      ];\n    }\n  });\n  return entities;\n};\n\nexport { MoveFinger };\n"]},"metadata":{},"sourceType":"module"}