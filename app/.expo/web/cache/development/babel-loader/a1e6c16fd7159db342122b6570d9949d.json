{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Questionnaire.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport Picker from '@gregfrench/react-native-wheel-picker';\nvar PickerItem = Picker.Item;\n\nvar WheelPicker = function WheelPicker(props) {\n  var _useState = useState(2),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedItem = _useState2[0],\n      setSelectedItem = _useState2[1];\n\n  var _useState3 = useState(props.items),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemList = _useState4[0],\n      setItemList = _useState4[1];\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker, {\n    style: {\n      width: 150,\n      height: 180\n    },\n    lineColor: \"#000000\",\n    lineGradientColorFrom: \"#008000\",\n    lineGradientColorTo: \"#FF5733\",\n    selectedValue: selectedItem,\n    itemStyle: {\n      color: \"black\",\n      fontSize: 26\n    },\n    onValueChange: function onValueChange(index) {\n      return setSelectedItem(index);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, itemList.map(function (value, i) {\n    return React.createElement(PickerItem, {\n      label: value,\n      value: i,\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    });\n  }))));\n};\n\nvar CheckBox = function CheckBox(props) {\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  var _useState7 = useState(props.clicks),\n      _useState8 = _slicedToArray(_useState7, 2),\n      clicks = _useState8[0],\n      setClicks = _useState8[1];\n\n  var changeBoxStatus = function changeBoxStatus() {\n    setSelected(!selected);\n    setClicks(clicks + 1);\n    props.onChange();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.checkBox],\n    onPress: changeBoxStatus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    size: 30,\n    color: '#211f30',\n    name: selected ? 'check-box' : 'check-box-outline-blank',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 32\n    }\n  }, \"Enable recommendation for breaks?\")));\n};\n\nvar Questionnaire = function (_React$Component) {\n  _inherits(Questionnaire, _React$Component);\n\n  var _super = _createSuper(Questionnaire);\n\n  function Questionnaire() {\n    var _this2;\n\n    _classCallCheck(this, Questionnaire);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      hours: 0,\n      mins: 0,\n      breaks: 0,\n      breakTimes: 0,\n      workTimes: 0,\n      number: 0,\n      select: false\n    };\n\n    _this2.handleHours = function (text) {\n      _this2.setState({\n        hours: parseInt(text)\n      });\n    };\n\n    _this2.handleMins = function (text) {\n      _this2.setState({\n        mins: parseInt(text)\n      });\n    };\n\n    _this2.handleBreaks = function (text) {\n      _this2.setState({\n        breaks: parseInt(text)\n      });\n    };\n\n    _this2.handleBreakTimes = function (text) {\n      _this2.setState({\n        breakTimes: parseInt(text)\n      });\n    };\n\n    _this2.handleWorkTimes = function () {\n      var i = 60 * _this2.state.hours + _this2.state.mins;\n      var j = _this2.state.breaks * _this2.state.breakTimes;\n      var k = i - j;\n      k = k / (_this2.state.breaks + 1);\n\n      _this2.setState({\n        workTimes: k\n      });\n    };\n\n    _this2.changeState = function () {\n      _this2.setState({\n        number: _this2.state.number + 1\n      });\n\n      _this2.setState({\n        select: !_this2.state.select\n      });\n    };\n\n    _this2.renderChildren = function () {\n      return React.createElement(React.Fragment, null, React.createElement(TextInput, {\n        style: styles.input,\n        keyboardType: \"numeric\",\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Number of Sections\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        onChangeText: _this2.handleBreaks,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        keyboardType: \"numeric\",\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Length of Sections\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        onChangeText: _this2.handleBreakTimes,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 5\n        }\n      }));\n    };\n\n    _this2.renderDropDown = function () {\n      var time = _this2.state.hours * 60 + _this2.state.mins;\n      var sections = _this2.state.hours + Math.floor((time - 60) / 30) + 1;\n      var timeslots = [];\n\n      for (var i = 0; i < sections; i++) {\n        timeslots.push({\n          label: i + '',\n          value: i\n        });\n      }\n\n      var lowTime = 10 + 5 * _this2.state.hours;\n      var upTime = 20 + 10 * _this2.state.hours;\n      return React.createElement(React.Fragment, null, React.createElement(DropDownPicker, {\n        items: timeslots,\n        containerStyle: {\n          height: 40\n        },\n        dropDownStyle: {\n          marginTop: 2\n        },\n        placeholder: \"Select number of sections\",\n        onChangeItem: function onChangeItem(item) {\n          _this2.setState({\n            breaks: item.value\n          });\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }\n      }), React.createElement(DropDownPicker, {\n        items: [{\n          label: '10 mins',\n          value: 10\n        }, {\n          label: '15 mins',\n          value: 15\n        }, {\n          label: '20 mins',\n          value: 20\n        }],\n        containerStyle: {\n          height: 40\n        },\n        dropDownStyle: {\n          marginTop: 2\n        },\n        placeholder: \"Select length of sections\",\n        onChangeItem: function onChangeItem(item) {\n          _this2.setState({\n            breakTimes: item.value\n          });\n        },\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 8\n        }\n      }));\n    };\n\n    return _this2;\n  }\n\n  _createClass(Questionnaire, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var navigate = this.props.navigation.navigate;\n      var list = [];\n\n      for (var i = 0; i < this.state.breaks * 2 + 1; i++) {\n        if (i % 2 == 0) {\n          list.push(this.state.workTimes);\n        } else {\n          list.push(this.state.breakTimes);\n        }\n      }\n\n      var array = [{\n        label: '45 mins',\n        value: 45\n      }, {\n        label: '1 hour',\n        value: 60\n      }, {\n        label: '1 hour 15 mins',\n        value: 75\n      }, {\n        label: '1 hour 30 mins',\n        value: 90\n      }, {\n        label: '1 hour 45 mins',\n        value: 105\n      }, {\n        label: '2 hours',\n        value: 120\n      }, {\n        label: '2 hour 15 mins',\n        value: 135\n      }, {\n        label: '2 hour 30 mins',\n        value: 150\n      }];\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, React.createElement(WheelPicker, {\n        items: array,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 8\n        }\n      }), React.createElement(CheckBox, {\n        clicks: this.state.number,\n        select: this.state.select,\n        onChange: this.changeState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 6\n        }\n      }), this.state.select ? this.renderDropDown() : this.renderChildren(), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return _this3.handleWorkTimes();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 12\n        }\n      }, React.createElement(Text, {\n        style: styles.submitButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }\n      }, \" Submit \"))), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }\n      }, this.state.workTimes), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }, list), React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 12\n        }\n      }, React.createElement(Button, {\n        title: \"Go to Timer Screen\",\n        onPress: function onPress() {\n          return navigate('Timer');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 16\n        }\n      })));\n    }\n  }]);\n\n  return Questionnaire;\n}(React.Component);\n\nQuestionnaire.navigationOptions = {\n  title: 'Questionnaire'\n};\nexport { Questionnaire as default };\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 23\n  },\n  input: {\n    margin: 15,\n    height: 40,\n    borderColor: '#7a42f4',\n    borderWidth: 1\n  },\n  submitButton: {\n    backgroundColor: '#7a42f4',\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Questionnaire.js"],"names":["React","useState","DropDownPicker","Icon","Picker","PickerItem","Item","WheelPicker","props","selectedItem","setSelectedItem","items","itemList","setItemList","width","height","color","fontSize","index","map","value","i","CheckBox","selected","setSelected","clicks","setClicks","changeBoxStatus","onChange","styles","checkBox","Questionnaire","state","hours","mins","breaks","breakTimes","workTimes","number","select","handleHours","text","setState","parseInt","handleMins","handleBreaks","handleBreakTimes","handleWorkTimes","j","k","changeState","renderChildren","input","renderDropDown","time","sections","Math","floor","timeslots","push","label","lowTime","upTime","marginTop","item","navigate","navigation","list","array","container","submitButton","submitButtonText","Component","navigationOptions","title","StyleSheet","create","paddingTop","margin","borderColor","borderWidth","backgroundColor","padding"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport { StyleSheet, TouchableOpacity, TextInput, Text, View, Button , } from 'react-native';\nimport DropDownPicker from 'react-native-dropdown-picker'\nimport Icon from 'react-native-vector-icons/MaterialIcons'\nimport Picker from '@gregfrench/react-native-wheel-picker'\nvar PickerItem = Picker.Item;\n\nconst WheelPicker = (props) => {\n  const [selectedItem, setSelectedItem ] = useState(2);\n  const [itemList , setItemList ] = useState(props.items);\n\n  return (\n    <View>\n      <Text>\n        <Picker style={{width: 150, height: 180}}\n          lineColor=\"#000000\" //to set top and bottom line color (Without gradients)\n          lineGradientColorFrom=\"#008000\" //to set top and bottom starting gradient line color\n          lineGradientColorTo=\"#FF5733\" //to set top and bottom ending gradient\n          selectedValue={selectedItem}\n          itemStyle={{color:\"black\", fontSize:26}}\n          onValueChange={(index) => setSelectedItem(index) }>\n          {itemList.map((value, i) => (\n            <PickerItem label={value} value={i} key={i}/>\n          ))}\n        </Picker>\n      </Text>\n    </View>\n  );\n};\n\nconst CheckBox =(props)=>{//from Anne's code\n      const [selected, setSelected] = useState(false);\n      const [clicks, setClicks]=useState(props.clicks);\n      const changeBoxStatus=()=> {setSelected(!selected);setClicks(clicks+1);props.onChange();}\n\n      return(\n         <>\n         <View>\n        <TouchableOpacity style={[styles.checkBox]} onPress={changeBoxStatus} >\n            <Icon\n                size={30}\n                color={'#211f30'}\n                name={ selected ? 'check-box' : 'check-box-outline-blank'}\n            />\n            </TouchableOpacity><Text>Enable recommendation for breaks?</Text>\n            </View>\n            </>\n      )\n\n}\n\nexport default class Questionnaire extends React.Component{\n   static navigationOptions = {title: 'Questionnaire'};\n   state = {\n    hours: 0,\n    mins: 0,\n    breaks: 0,\n    breakTimes:0,\n    workTimes:0,\n    number:0,\n    select:false\n }\n //submit button after hours and minutes\n //give recommendation and option to use/not use\n handleHours = (text) => {\n    this.setState({ hours: parseInt(text) })\n    //console.log(text)\n }\n handleMins = (text) => {\n    this.setState({ mins: parseInt(text) })\n }\n handleBreaks = (text) => {\n    this.setState({ breaks: parseInt(text) })\n }\n handleBreakTimes = (text) => {\n    this.setState({ breakTimes: parseInt(text) })\n }\n handleWorkTimes = () => {\n    //console.log(this.state.hours)\n    //console.log(this.state.mins)\n    //console.log(this.state.breaks)\n    //console.log(this.state.breakTimes)\n    let i = 60 * this.state.hours + this.state.mins;\n    let j = this.state.breaks * this.state.breakTimes;\n    let k = i-j;\n    //console.log(k)\n    k= k/(this.state.breaks+1);\n    this.setState({workTimes:k})\n    //console.log(k);\n    //console.log(this.state.workTimes)\n }\n changeState =()=>{\n    //e.preventDefault();\n    this.setState({number:this.state.number+1});\n    this.setState({select:!this.state.select});\n };\n renderChildren = () =>{\n    return(<>\n      <TextInput style = {styles.input}\n   keyboardType=\"numeric\"\n       underlineColorAndroid = \"transparent\"\n       placeholder = \"Number of Sections\"\n       placeholderTextColor = \"#9a73ef\"\n       autoCapitalize = \"none\"\n       onChangeText = {this.handleBreaks}/>\n    <TextInput style = {styles.input}\n   keyboardType=\"numeric\"\n       underlineColorAndroid = \"transparent\"\n       placeholder = \"Length of Sections\"\n       placeholderTextColor = \"#9a73ef\"\n       autoCapitalize = \"none\"\n       onChangeText = {this.handleBreakTimes}/>\n    </>);\n}\nrenderDropDown = () => {\n   let time =this.state.hours*60+this.state.mins;\n   let sections=this.state.hours+Math.floor((time-60)/30)+1;\n   let timeslots=[];\n   for(let i=0;i<sections;i++){\n      timeslots.push({label:i+'',value:i});\n   }\n   let lowTime=10+5*this.state.hours;\n   let upTime=20+10*this.state.hours;\n   // let times=[];is laggy for some reason\n   // for(let i=lowTime;i<upTime+1;lowTime+=5){//number after 1 is somewhat arbitrary\n   //    times.push({label:i+' mins',value:i});\n   // }\n   //console.log(timeslots);\n   return (<>\n      <DropDownPicker\n      items={timeslots}\n\ncontainerStyle={{height: 40}}\ndropDownStyle={{marginTop: 2}}\n      placeholder=\"Select number of sections\"\n   //    items={this.state.mins}\n      onChangeItem={(item)=>{this.setState({\n        breaks:item.value\n      })\n   }}/><DropDownPicker\n   items={[\n{label: '10 mins', value: 10,},\n{label: '15 mins', value: 15,},\n{label: '20 mins', value: 20,},\n]}\n\ncontainerStyle={{height: 40}}\ndropDownStyle={{marginTop: 2}}\n   placeholder=\"Select length of sections\"\n//    items={this.state.mins}\n   onChangeItem={(item)=>{this.setState({\n     breakTimes:item.value\n   })\n}}/>\n   </>);\n}\n   render(){\n       const { navigate } = this.props.navigation; //props comes from App.js\n       let list = []; //array variable\n       for(let i=0;i<this.state.breaks*2+1;i++){\n          if(i%2==0){\n             list.push(this.state.workTimes)\n          }\n          else{\n             list.push(this.state.breakTimes)\n          }\n       }\n       let array=[\n{label: '45 mins', value: 45,},\n{label: '1 hour', value: 60, },\n{label: '1 hour 15 mins', value: 75,},\n{label: '1 hour 30 mins', value: 90,},\n{label: '1 hour 45 mins', value: 105,},\n{label: '2 hours', value: 120,},\n{label: '2 hour 15 mins', value: 135,},\n{label: '2 hour 30 mins', value: 150,},\n];\n// <DropDownPicker\n// items={[\n// {label: '45 mins', value: 45,},\n// {label: '1 hour', value: 60, },\n// {label: '1 hour 15 mins', value: 75,},\n// {label: '1 hour 30 mins', value: 90,},\n// {label: '1 hour 45 mins', value: 105,},\n// {label: '2 hours', value: 120,},\n// {label: '2 hour 15 mins', value: 135,},\n// {label: '2 hour 30 mins', value: 150,},\n// ]}\n//\n// containerStyle={{height: 40}}\n// dropDownStyle={{marginTop: 2}}\n// placeholder=\"Select number of minutes\"\n// //    items={this.state.mins}\n// onChangeItem={(item)=>{this.setState({\n//   hours:parseInt(Math.floor(item.value/60)),\n//   mins:parseInt(item.value%60)\n// })\n// }}\n// />\n       return(\n        <>\n        <View style = {styles.container}>\n       <WheelPicker items={array}/>\n     <CheckBox clicks={this.state.number} select={this.state.select} onChange={this.changeState}/>\n     {this.state.select?this.renderDropDown():this.renderChildren()}\n           <TouchableOpacity\n              style = {styles.submitButton}\n              onPress = {\n                 () => this.handleWorkTimes()\n              }>\n              <Text style = {styles.submitButtonText}> Submit </Text>\n           </TouchableOpacity>\n        </View>\n        <Text>\n        {this.state.workTimes}\n        </Text>\n        <Text>\n        {list}\n        </Text>\n\n           <View style = {styles.container}>\n               <Button\n                  title= \"Go to Timer Screen\"\n                  onPress={() => navigate('Timer')}\n              />\n           </View>\n           </>\n\n       )\n   }\n}\nconst styles = StyleSheet.create({\n    container: {\n       paddingTop: 23\n    },\n    input: {\n       margin: 15,\n       height: 40,\n       borderColor: '#7a42f4',\n       borderWidth: 1\n    },\n    submitButton: {\n       backgroundColor: '#7a42f4',\n       padding: 10,\n       margin: 15,\n       height: 40,\n    },\n    submitButtonText:{\n       color: 'white'\n    }\n });\n"]},"metadata":{},"sourceType":"module"}