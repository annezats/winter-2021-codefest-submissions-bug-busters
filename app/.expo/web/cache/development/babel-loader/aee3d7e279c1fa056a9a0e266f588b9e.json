{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"/Users/annezats/Desktop/CODE/winter-2021-codefest-submissions-bug-busters/app/components/Timer.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useInterval from '@use-it/interval';\n\nvar Timer = function (_React$Component) {\n  _inherits(Timer, _React$Component);\n\n  var _super = _createSuper(Timer);\n\n  function Timer() {\n    _classCallCheck(this, Timer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Timer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$navigatio = this.props.navigation,\n          navigate = _this$props$navigatio.navigate,\n          state = _this$props$navigatio.state;\n      var listoftimes = state.params.listoftimes.map(function (min) {\n        return min * 60;\n      });\n      var end = Date.now();\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, \" Study session until \", end.toLocaleString(), \" \"), React.createElement(NewTimer, {\n        listoftimes: listoftimes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Before you start, make a to do list!\",\n        onPress: function onPress() {\n          return navigate('Checklist');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }), React.createElement(StatusBar, {\n        style: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Timer;\n}(React.Component);\n\nTimer.navigationOptions = {\n  title: 'Timer'\n};\nexport { Timer as default };\n\nvar NewTimer = function NewTimer(props) {\n  var timertext = \"Hasn't Started\";\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      buttonClicked = _useState2[0],\n      setButtonClicked = _useState2[1];\n\n  var _useState3 = useState(\"Hasn't Started\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timeLeft = _useState4[0],\n      setTimeLeft = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      i = _useState6[0],\n      setI = _useState6[1];\n\n  var _useState7 = useState(props.listoftimes[i]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      seconds = _useState8[0],\n      setSeconds = _useState8[1];\n\n  useInterval(function () {\n    if (!buttonClicked) return;\n\n    if (seconds > 0) {\n      setSeconds(seconds - 1);\n      return;\n    }\n\n    if (i === props.listoftimes.length - 1) {\n      setTimeLeft(\"done\");\n      setButtonClicked(false);\n    } else {\n      setSeconds(props.listoftimes[i + 1]);\n      setI(i + 1);\n    }\n  }, 1000);\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    onPress: function onPress() {\n      setButtonClicked(!buttonClicked);\n    },\n    title: buttonClicked ? \"Pause\" : \"Start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, timeLeft, \" \"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, seconds, \" \"));\n};\n\nvar ProgressBar = function ProgressBar(props) {\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      numSections = _useState10[0],\n      setNumSections = _useState10[1];\n\n  return React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, numSections, \" done! \");\n};\n\nfunction timeLeftCalculator(seconds) {\n  var days = Math.floor(seconds / (60 * 60 * 24));\n  var hours = Math.floor(seconds % (60 * 60 * 24) / (60 * 60));\n  var minutes = Math.floor(seconds % (60 * 60) / 60);\n  var secs = Math.floor(seconds % 60);\n  var timertext = days + \"d \" + hours + \"h \" + minutes + \"m \" + secs + \"s \";\n  return timertext;\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/annezats/Desktop/CODE/winter-2021-codefest-submissions-bug-busters/app/components/Timer.js"],"names":["StatusBar","React","useState","useEffect","useInterval","Timer","props","navigation","navigate","state","listoftimes","params","map","min","end","Date","now","styles","container","toLocaleString","Component","navigationOptions","title","NewTimer","timertext","buttonClicked","setButtonClicked","timeLeft","setTimeLeft","i","setI","seconds","setSeconds","length","ProgressBar","numSections","setNumSections","timeLeftCalculator","days","Math","floor","hours","minutes","secs","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState, useEffect} from 'react';\nimport { Button, StyleSheet, Text, View } from 'react-native';\nimport useInterval from '@use-it/interval';\n\nexport default class Timer extends React.Component{\n    static navigationOptions = {title: 'Timer'};\n    render(){\n      const { navigate, state } =this.props.navigation;\n      let listoftimes=state.params.listoftimes.map(min=>min*60)\n      let end= Date.now()// +sum*60*1000 //insert func that gets end of array\n      return(\n        <View style={styles.container}>\n        <Text> Study session until {end.toLocaleString()} </Text>\n        <NewTimer listoftimes={listoftimes}/>\n        <Button\n           title= \"Before you start, make a to do list!\"\n           onPress={() => navigate('Checklist')}\n\n       />\n        <StatusBar style=\"auto\" />\n        </View>\n      )\n    }\n}\n\n\nconst NewTimer =(props)=>{\n  let timertext = \"Hasn't Started\" //just make all timertexts into setTimeLefts\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const [timeLeft, setTimeLeft]= useState(\"Hasn't Started\"); //initializes timer text\n  const [i, setI]=useState(0)\n  const [seconds,setSeconds]=useState(props.listoftimes[i])\n  useInterval(()=>{\n    if (!buttonClicked) return\n    if(seconds>0){\n      setSeconds(seconds-1)\n      return\n    }\n    if (i=== props.listoftimes.length-1){\n      setTimeLeft(\"done\")\n      setButtonClicked(false)\n      //maybe clearInterval?\n    }\n    else{\n      setSeconds(props.listoftimes[i+1])\n      setI(i+1)\n    }\n\n  },1000)\n\n      //setTimeLeft(timeLeftCalculator(seconds))\n\n\n\n  //{(i%2) ? \"take a break\"  : \"do work!\"} //this will work when i is a state\n\n  //things that are a problem:\n  //when you pause, and then unpause, it restarts.\n  //solution: make the time a state.\n  //problem with that: parent is a class, which can't use hooks\n  return(\n    <>\n      <Button\n        onPress={()=>{\n          setButtonClicked(!buttonClicked);\n        }}\n        //disabled={buttonClicked}\n        title={buttonClicked ? \"Pause\" : \"Start\"}\n      />\n      <Text>{timeLeft} </Text>\n      <Text>{seconds} </Text>\n    </>\n  )\n}\n\nconst ProgressBar=(props)=>{\n  const [numSections, setNumSections]= useState(0); //initializes timer text\n  return(\n    <Text>{numSections} done! </Text>\n  )\n}\n\nfunction timeLeftCalculator(seconds){\n  let days = Math.floor(seconds / ( 60 * 60 * 24));\n  let hours = Math.floor((seconds % (60 * 60 * 24)) / ( 60 * 60));\n  let minutes = Math.floor((seconds % ( 60 * 60)) / 60);\n  let secs = Math.floor(seconds % 60 );\n  let timertext=days + \"d \" + hours + \"h \" + minutes + \"m \" + secs + \"s \"\n  return timertext;\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  });\n"]},"metadata":{},"sourceType":"module"}