{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Game.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { registerRootComponent } from 'expo';\nimport BestGame from \"./game\";\n\nvar Game = function (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  var _super = _createSuper(Game);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$navigatio = this.props.navigation,\n          navigate = _this$props$navigatio.navigate,\n          state = _this$props$navigatio.state;\n\n      var createTwoButtonAlert = function createTwoButtonAlert() {\n        return Alert.alert(\"Are you sure you would like to leave this screen?\", \"Leaving will prevent you from returning to the game.\", [{\n          text: \"Cancel\",\n          onPress: function onPress() {\n            return console.log(\"Cancel Pressed\");\n          },\n          style: \"cancel\"\n        }, {\n          text: \"OK\",\n          onPress: function onPress() {\n            return navigate('Questionnaire');\n          }\n        }], {\n          cancelable: false\n        });\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, \"This is the Game Screen\"), React.createElement(Button, {\n        title: \"Skip Game and Go To Questionnaire\",\n        onPress: createTwoButtonAlert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      })), React.createElement(BestGame, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nGame.navigationOptions = {\n  title: 'Game'\n};\nexport { Game as default };\nregisterRootComponent(Game);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 3,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/mming/Desktop/winter-2021-codefest-submissions-bug-busters/app/components/Game.js"],"names":["React","Component","useState","useEffect","useRef","registerRootComponent","BestGame","Game","props","navigation","navigate","state","createTwoButtonAlert","Alert","alert","text","onPress","console","log","style","cancelable","styles","container","navigationOptions","title","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,MAAhD,QAA8D,OAA9D;;;;;;AAEA,SAASC,qBAAT,QAAsC,MAAtC;AACA,OAAOC,QAAP;;IAEqBC,I;;;;;;;;;;;;;6BAET;AAAA,kCACuB,KAAKC,KAAL,CAAWC,UADlC;AAAA,UACIC,QADJ,yBACIA,QADJ;AAAA,UACcC,KADd,yBACcA,KADd;;AAEJ,UAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,eAC3BC,KAAK,CAACC,KAAN,CACE,mDADF,EAEE,sDAFF,EAGE,CACE;AACEC,UAAAA,IAAI,EAAE,QADR;AAEEC,UAAAA,OAAO,EAAE;AAAA,mBAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA,WAFX;AAGEC,UAAAA,KAAK,EAAE;AAHT,SADF,EAME;AAAEJ,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,OAAO,EAAE;AAAA,mBAAMN,QAAQ,CAAC,eAAD,CAAd;AAAA;AAAvB,SANF,CAHF,EAWE;AAAEU,UAAAA,UAAU,EAAE;AAAd,SAXF,CAD2B;AAAA,OAA7B;;AAcA,aACG,0CACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,mCAAd;AAAkD,QAAA,OAAO,EAAEV,oBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADD,EAKC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALD,CADH;AASH;;;;EA3B6BZ,KAAK,CAACC,S;;AAAnBM,I,CACVgB,iB,GAAoB;AAACC,EAAAA,KAAK,EAAE;AAAR,C;SADVjB,I;AA6BrBF,qBAAqB,CAACE,IAAD,CAArB;AACA,IAAMc,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADkB,CAAlB,CAAf","sourcesContent":["import React, { Component, useState, useEffect, useRef } from 'react';\nimport { Button, StyleSheet, Text, View, Alert } from 'react-native';\nimport { registerRootComponent } from 'expo';\nimport BestGame from \"./game\";\n\nexport default class Game extends React.Component{\n    static navigationOptions = {title: 'Game'};\n    render(){\n        const { navigate, state } =this.props.navigation;\n        const createTwoButtonAlert = () =>\n          Alert.alert(\n            \"Are you sure you would like to leave this screen?\",\n            \"Leaving will prevent you from returning to the game.\",\n            [\n              {\n                text: \"Cancel\",\n                onPress: () => console.log(\"Cancel Pressed\"),\n                style: \"cancel\"\n              },\n              { text: \"OK\", onPress: () => navigate('Questionnaire') }\n            ],\n            { cancelable: false }\n          );\n        return(\n           <>\n            <View style={styles.container}>\n                <Text>This is the Game Screen</Text>\n                <Button title='Skip Game and Go To Questionnaire' onPress={createTwoButtonAlert}/>\n            </View>\n            <BestGame />\n            </>\n        )\n    }\n}\nregisterRootComponent(Game);\nconst styles = StyleSheet.create({\n    container: {\n      flex: 3,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  });\n"]},"metadata":{},"sourceType":"module"}